{
    "sourceFile": "8. book_manegement/public/books.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 49,
            "patches": [
                {
                    "date": 1629784145055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1629784158579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,208 +1,236 @@\n <!DOCTYPE html>\r\n <html lang=\"en\">\r\n+\r\n <head>\r\n-  <meta charset=\"UTF-8\">\r\n-  <title>Document</title>\r\n-  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n+    <meta charset=\"UTF-8\">\r\n+    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+    <title>Document</title>\r\n+    <style>\r\n+        .grid {\r\n+            margin: 0 auto;\r\n+            width: 530px;\r\n+            text-align: center;\r\n+        }\r\n+\r\n+        .grid table {\r\n+            width: 100%;\r\n+            border-collapse: collapse;\r\n+        }\r\n+\r\n+        .grid th {\r\n+            background-color: pink;\r\n+        }\r\n+\r\n+        .grid th,\r\n+        td {\r\n+            border: 1px dashed pink;\r\n+            height: 35px;\r\n+            line-height: 35px;\r\n+        }\r\n+\r\n+        .grid .book {\r\n+            background-color: pink;\r\n+            padding: 5px 0 10px;\r\n+        }\r\n+        .grid .total{\r\n+            height: 30px;\r\n+            line-height: 30px;\r\n+            background-color: pink;\r\n+            border-top: 1px solid #000;\r\n+            border-bottom: 1px solid #000;\r\n+        }\r\n+    </style>\r\n </head>\r\n+\r\n <body>\r\n-  <div id=\"app\">\r\n-    <div class=\"grid\">\r\n-      <div>\r\n-        <h1>图书管理</h1>\r\n-        <div class=\"book\">\r\n-          <div>\r\n-            <label for=\"id\">\r\n-              编号：\r\n-            </label>\r\n-            <input type=\"text\" id=\"id\" v-model='id' disabled=\"false\" v-focus>\r\n-            <label for=\"name\">\r\n-              名称：\r\n-            </label>\r\n-            <input type=\"text\" id=\"name\" v-model='name'>\r\n-            <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n-          </div>\r\n+    <div id=\"app\">\r\n+        <div class=\"grid\">\r\n+            <div>\r\n+                <h2>图书管理</h2>\r\n+                <div class=\"book\">\r\n+                    <label for=\"id\">编号：</label>\r\n+                    <input type=\"text\" id=\"id\" v-model='id' :disabled=\"idFlag\" v-focus>\r\n+                    <label for=\"name\">名称：</label>\r\n+                    <input type=\"text\" id=\"name\" v-model='name'>\r\n+                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n+                </div>\r\n+                <div class=\"total\">\r\n+                    <span>图书总数：</span>\r\n+                    <span>{{total}}</span>\r\n+                </div>\r\n+            </div>\r\n+            <table>\r\n+                <thead>\r\n+                    <tr>\r\n+                        <th>编号</th>\r\n+                        <th>名称</th>\r\n+                        <th>时间</th>\r\n+                        <th>操作</th>\r\n+                    </tr>\r\n+                </thead>\r\n+                <tbody>\r\n+                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n+                        <td>{{item.id}}</td>\r\n+                        <td>{{item.name}}</td>\r\n+                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n+                        <td>\r\n+                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n+                            <span>|</span>\r\n+                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n+                        </td>\r\n+                    </tr>\r\n+                </tbody>\r\n+            </table>\r\n         </div>\r\n-      </div>\r\n-      <div class=\"total\">\r\n-        <span>图书总数：</span>\r\n-        <span>{{total}}</span>\r\n-      </div>\r\n-      <table>\r\n-        <thead>\r\n-          <tr>\r\n-            <th>编号</th>\r\n-            <th>名称</th>\r\n-            <th>时间</th>\r\n-            <th>操作</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          <tr :key='item.id' v-for='item in books'>\r\n-            <td>{{item.id}}</td>\r\n-            <td>{{item.name}}</td>\r\n-            <td>{{item.date | format('yyyy-MM-dd hh:mm:ss')}}</td>\r\n-            <td>\r\n-              <a href=\"\" @click.prevent='toEdit(item.id)'>修改</a>\r\n-              <span>|</span>\r\n-              <a href=\"\" @click.prevent='deleteBook(item.id)'>删除</a>\r\n-            </td>\r\n-          </tr>\r\n-        </tbody>\r\n-      </table>\r\n     </div>\r\n-  </div>\r\n-  <script type=\"text/javascript\" src=\"js/vue.js\"></script>\r\n-  <script type=\"text/javascript\" src=\"js/axios.js\"></script>\r\n-  <script type=\"text/javascript\">\r\n-    /*\r\n-      图书管理-添加图书\r\n-    */\r\n-    axios.defaults.baseURL = 'http://localhost:3000/';\r\n-    axios.interceptors.response.use(function(res){\r\n-      return res.data;\r\n-    }, function(error){\r\n-      console.log(error)\r\n-    });\r\n-    Vue.directive('focus', {\r\n-      inserted: function (el) {\r\n-        el.focus();\r\n-      }\r\n-    });\r\n-    Vue.filter('format', function(value, arg) {\r\n-      function dateFormat(date, format) {\r\n-        if (typeof date === \"string\") {\r\n-          var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n-          if (mts && mts.length >= 3) {\r\n-            date = parseInt(mts[2]);\r\n-          }\r\n-        }\r\n-        date = new Date(date);\r\n-        if (!date || date.toUTCString() == \"Invalid Date\") {\r\n-          return \"\";\r\n-        }\r\n-        var map = {\r\n-          \"M\": date.getMonth() + 1, //月份 \r\n-          \"d\": date.getDate(), //日 \r\n-          \"h\": date.getHours(), //小时 \r\n-          \"m\": date.getMinutes(), //分 \r\n-          \"s\": date.getSeconds(), //秒 \r\n-          \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n-          \"S\": date.getMilliseconds() //毫秒 \r\n-        };\r\n-        format = format.replace(/([yMdhmsqS])+/g, function(all, t) {\r\n-          var v = map[t];\r\n-          if (v !== undefined) {\r\n-            if (all.length > 1) {\r\n-              v = '0' + v;\r\n-              v = v.substr(v.length - 2);\r\n+    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n+    <script>\r\n+        //常用特性：自定义指令\r\n+        Vue.directive('focus', {\r\n+            inserted: function (el) {\r\n+                el.focus()\r\n             }\r\n-            return v;\r\n-          } else if (t === 'y') {\r\n-            return (date.getFullYear() + '').substr(4 - all.length);\r\n-          }\r\n-          return all;\r\n-        });\r\n-        return format;\r\n-      }\r\n-      return dateFormat(value, arg);\r\n-    })\r\n-    var vm = new Vue({\r\n-      el: '#app',\r\n-      data: {\r\n-        flag: false,\r\n-        submitFlag: false,\r\n-        id: '',\r\n-        name: '',\r\n-        books: []\r\n-      },\r\n-      methods: {\r\n-        handle: async function(){\r\n-          if(this.flag) {\r\n-            // 编辑图书\r\n-            var ret = await axios.put('books/' + this.id, {\r\n-              name: this.name\r\n-            });\r\n-            if(ret.status == 200){\r\n-              // 重新加载列表数据\r\n-              this.queryData();\r\n+        })\r\n+        //常用特性：过滤器\r\n+        Vue.filter('format', function (value, arg) {\r\n+            function dateFormat(date, format) {\r\n+                if (typeof date === \"string\") {\r\n+                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n+                    if (mts && mts.length >= 3) {\r\n+                        date = parseInt(mts[2]);\r\n+                    }\r\n+                }\r\n+                date = new Date(date);\r\n+                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n+                    return \"\";\r\n+                }\r\n+                var map = {\r\n+                    \"M\": date.getMonth() + 1, //月份 \r\n+                    \"d\": date.getDate(), //日 \r\n+                    \"h\": date.getHours(), //小时 \r\n+                    \"m\": date.getMinutes(), //分 \r\n+                    \"s\": date.getSeconds(), //秒 \r\n+                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n+                    \"S\": date.getMilliseconds() //毫秒 \r\n+                };\r\n+                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n+                    var v = map[t];\r\n+                    if (v !== undefined) {\r\n+                        if (all.length > 1) {\r\n+                            v = '0' + v;\r\n+                            v = v.substr(v.length - 2);\r\n+                        }\r\n+                        return v;\r\n+                    } else if (t === 'y') {\r\n+                        return (date.getFullYear() + '').substr(4 - all.length);\r\n+                    }\r\n+                    return all;\r\n+                });\r\n+                return format;\r\n             }\r\n-            this.flag = false;\r\n-          }else{\r\n-            // 添加图书\r\n-            var ret = await axios.post('books', {\r\n-              name: this.name\r\n-            })\r\n-            if(ret.status == 200) {\r\n-              // 重新加载列表数据\r\n-              this.queryData();\r\n+            return dateFormat(value, arg);\r\n+        })\r\n+        var vm = new Vue({\r\n+            el: '#app',\r\n+            data: {\r\n+                id: '',\r\n+                name: '',\r\n+                idFlag: false,\r\n+                books: []\r\n+            },\r\n+            methods: {\r\n+                handle: function () {\r\n+                    if (this.idFlag) {\r\n+                        //禁用状态，则为修改\r\n+                        //在books中根据id查找对应的book\r\n+                        this.books.some((item) => {\r\n+                            if (item.id == this.id) {\r\n+                                //将修改后的名称赋值给对应的book\r\n+                                item.name = this.name\r\n+                                return true\r\n+                            }\r\n+                        })\r\n+                        //修改完成后需要将编号的状态取消禁用\r\n+                        this.idFlag = false\r\n+                    } else {\r\n+                        //否则为添加\r\n+                        var book = {};\r\n+                        book.id = this.id;\r\n+                        book.name = this.name;\r\n+                        book.date = '';\r\n+                        this.books.push(book);\r\n+                        this.id = ''\r\n+                        this.name = ''\r\n+                    }\r\n+                    //清空表单\r\n+                    this.id = ''\r\n+                    this.name = ''\r\n+                },\r\n+                toEdit: function (id) {\r\n+                    //禁止修改id\r\n+                    this.idFlag = true\r\n+                    //根据id找book\r\n+                    var book = this.books.filter(function (item) {\r\n+                        return item.id == id\r\n+                    })\r\n+                    this.id = book[0].id\r\n+                    this.name = book[0].name\r\n+                },\r\n+                toDelete: function (id) {\r\n+                    //方法一：利用filter方法把某个book从books中过滤掉\r\n+                    this.books = this.books.filter((item) => {\r\n+                        return item.id != id\r\n+                    })\r\n+                    //方法二：根据id找到对应的books索引\r\n+                    // var index=this.books.findIndex((item)=>{\r\n+                    //     return item.id==id\r\n+                    // })\r\n+                    // this.books.splice(index,1)\r\n+                }\r\n+            },\r\n+            //常用特性：侦听器\r\n+            //验证图书名称是否已经存在\r\n+            watch:{\r\n+                name:function(val){\r\n+                    var nameFlag=this.books.some((item)=>{\r\n+                        return item.name===val\r\n+                    })\r\n+                    if(nameFlag){\r\n+                        //说明图书名称存在\r\n+                        this.submitFlag=true  //禁用提交按钮\r\n+                    }else{\r\n+                        this.submitFlag=false\r\n+                    }\r\n+                }\r\n+            },\r\n+            //常用特性：计算属性\r\n+            computed:{\r\n+                total:function(){\r\n+                    return this.books.length\r\n+                }\r\n+            },\r\n+            //生命周期\r\n+            //该生命周期钩子函数被触发时，模板已经可以使用\r\n+            //一般用于获取后台数据，然后把数据填充到模板\r\n+            mounted:function(){\r\n+                var data=[{\r\n+                    id: 1,\r\n+                    name: '三国演义',\r\n+                    date: 2525609975000\r\n+                }, {\r\n+                    id: 2,\r\n+                    name: '水浒传',\r\n+                    date: 2525609975000\r\n+                }, {\r\n+                    id: 3,\r\n+                    name: '红楼梦',\r\n+                    date: 2525609975000\r\n+                }]\r\n+                this.books=data\r\n             }\r\n-          }\r\n-          // 清空表单\r\n-          this.id = '';\r\n-          this.name = '';\r\n-        },\r\n-        toEdit: async function(id){\r\n-          // flag状态位用于区分编辑和添加操作\r\n-          this.flag = true;\r\n-          // 根据id查询出对应的图书信息\r\n-          var ret = await axios.get('books/' + id);\r\n-          this.id = ret.id;\r\n-          this.name = ret.name;\r\n-        },\r\n-        deleteBook: async function(id){\r\n-          // 删除图书\r\n-          var ret = await axios.delete('books/' + id);\r\n-          if(ret.status == 200) {\r\n-            // 重新加载列表数据\r\n-            this.queryData();\r\n-          }\r\n-        },\r\n-        queryData: async function(){\r\n-          // 调用后台接口获取图书列表数据\r\n-          // var ret = await axios.get('books');\r\n-          // this.books = ret.data;\r\n+        })\r\n+    </script>\r\n+</body>\r\n \r\n-          this.books = await axios.get('books');\r\n-        }\r\n-      },\r\n-      computed: {\r\n-        total: function(){\r\n-          // 计算图书的总数\r\n-          return this.books.length;\r\n-        }\r\n-      },\r\n-      watch: {\r\n-        name: async function(val) {\r\n-          // 验证图书名称是否已经存在\r\n-          // var flag = this.books.some(function(item){\r\n-          //   return item.name == val;\r\n-          // });\r\n-          var ret = await axios.get('/books/book/' + this.name);\r\n-          if(ret.status == 1) {\r\n-            // 图书名称存在\r\n-            this.submitFlag = true;\r\n-          }else{\r\n-            // 图书名称不存在\r\n-            this.submitFlag = false;\r\n-          }\r\n-        }\r\n-      },\r\n-      mounted: function(){\r\n-        // var that = this;\r\n-        // axios.get('books').then(function(data){\r\n-        //   console.log(data.data)\r\n-        //   that.books = data.data;\r\n-        // })\r\n-\r\n-        // axios.get('books').then((data)=>{\r\n-        //   console.log(data.data)\r\n-        //   this.books = data.data;\r\n-        // })\r\n-\r\n-        this.queryData();\r\n-      }\r\n-    });\r\n-  </script>\r\n-</body>\r\n-</html>\r\n+</html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1629784212520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,41 +6,9 @@\n     <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n     <title>Document</title>\r\n     <style>\r\n-        .grid {\r\n-            margin: 0 auto;\r\n-            width: 530px;\r\n-            text-align: center;\r\n-        }\r\n-\r\n-        .grid table {\r\n-            width: 100%;\r\n-            border-collapse: collapse;\r\n-        }\r\n-\r\n-        .grid th {\r\n-            background-color: pink;\r\n-        }\r\n-\r\n-        .grid th,\r\n-        td {\r\n-            border: 1px dashed pink;\r\n-            height: 35px;\r\n-            line-height: 35px;\r\n-        }\r\n-\r\n-        .grid .book {\r\n-            background-color: pink;\r\n-            padding: 5px 0 10px;\r\n-        }\r\n-        .grid .total{\r\n-            height: 30px;\r\n-            line-height: 30px;\r\n-            background-color: pink;\r\n-            border-top: 1px solid #000;\r\n-            border-bottom: 1px solid #000;\r\n-        }\r\n+        \r\n     </style>\r\n </head>\r\n \r\n <body>\r\n"
                },
                {
                    "date": 1629784258272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,9 @@\n     <meta charset=\"UTF-8\">\r\n     <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n     <title>Document</title>\r\n-    <style>\r\n-        \r\n-    </style>\r\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n </head>\r\n \r\n <body>\r\n     <div id=\"app\">\r\n"
                },
                {
                    "date": 1629787214711,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n             },\r\n             methods: {\r\n                 handle: function () {\r\n                     if (this.idFlag) {\r\n-                        //禁用状态，则为修改\r\n+                        //true:禁用状态，则为修改\r\n                         //在books中根据id查找对应的book\r\n                         this.books.some((item) => {\r\n                             if (item.id == this.id) {\r\n                                 //将修改后的名称赋值给对应的book\r\n@@ -120,8 +120,9 @@\n                         //修改完成后需要将编号的状态取消禁用\r\n                         this.idFlag = false\r\n                     } else {\r\n                         //否则为添加\r\n+                        var ret=await \r\n                         var book = {};\r\n                         book.id = this.id;\r\n                         book.name = this.name;\r\n                         book.date = '';\r\n"
                },
                {
                    "date": 1629787277427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n                 idFlag: false,\r\n                 books: []\r\n             },\r\n             methods: {\r\n-                handle: function () {\r\n+                handle: async function () {\r\n                     if (this.idFlag) {\r\n                         //true:禁用状态，则为修改\r\n                         //在books中根据id查找对应的book\r\n                         this.books.some((item) => {\r\n@@ -120,9 +120,11 @@\n                         //修改完成后需要将编号的状态取消禁用\r\n                         this.idFlag = false\r\n                     } else {\r\n                         //否则为添加\r\n-                        var ret=await \r\n+                        var ret=await axois.get('books',{\r\n+                            name:this.name\r\n+                        })\r\n                         var book = {};\r\n                         book.id = this.id;\r\n                         book.name = this.name;\r\n                         book.date = '';\r\n"
                },
                {
                    "date": 1629787334043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -120,18 +120,12 @@\n                         //修改完成后需要将编号的状态取消禁用\r\n                         this.idFlag = false\r\n                     } else {\r\n                         //否则为添加\r\n-                        var ret=await axois.get('books',{\r\n+                        var ret=await axios.get('books',{\r\n                             name:this.name\r\n                         })\r\n-                        var book = {};\r\n-                        book.id = this.id;\r\n-                        book.name = this.name;\r\n-                        book.date = '';\r\n-                        this.books.push(book);\r\n-                        this.id = ''\r\n-                        this.name = ''\r\n+                        \r\n                     }\r\n                     //清空表单\r\n                     this.id = ''\r\n                     this.name = ''\r\n"
                },
                {
                    "date": 1629787404871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,10 @@\n             </table>\r\n         </div>\r\n     </div>\r\n     <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n+    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n+\r\n     <script>\r\n         //常用特性：自定义指令\r\n         Vue.directive('focus', {\r\n             inserted: function (el) {\r\n@@ -123,9 +125,12 @@\n                         //否则为添加\r\n                         var ret=await axios.get('books',{\r\n                             name:this.name\r\n                         })\r\n-                        \r\n+                        if(ret.status===200){\r\n+                            //重新加载图书列表数据\r\n+                            this.\r\n+                        }\r\n                     }\r\n                     //清空表单\r\n                     this.id = ''\r\n                     this.name = ''\r\n"
                },
                {
                    "date": 1629787543915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,15 @@\n     <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n     <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n \r\n     <script>\r\n+        axios.defaults.baseURL='http://localhost:3000'\r\n+        axios.interceptors.response.use((res)=>{\r\n+            return res.data\r\n+        },(error)=>{\r\n+            console.log(error);\r\n+        })\r\n+\r\n         //常用特性：自定义指令\r\n         Vue.directive('focus', {\r\n             inserted: function (el) {\r\n                 el.focus()\r\n@@ -127,9 +134,9 @@\n                             name:this.name\r\n                         })\r\n                         if(ret.status===200){\r\n                             //重新加载图书列表数据\r\n-                            this.\r\n+                            this.queryData()\r\n                         }\r\n                     }\r\n                     //清空表单\r\n                     this.id = ''\r\n@@ -154,8 +161,11 @@\n                     // var index=this.books.findIndex((item)=>{\r\n                     //     return item.id==id\r\n                     // })\r\n                     // this.books.splice(index,1)\r\n+                },\r\n+                queryData:function(){\r\n+                    //\r\n                 }\r\n             },\r\n             //常用特性：侦听器\r\n             //验证图书名称是否已经存在\r\n"
                },
                {
                    "date": 1629787649095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,8 +111,9 @@\n             data: {\r\n                 id: '',\r\n                 name: '',\r\n                 idFlag: false,\r\n+                submitFlag:false,\r\n                 books: []\r\n             },\r\n             methods: {\r\n                 handle: async function () {\r\n"
                },
                {
                    "date": 1629787667915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,9 +164,9 @@\n                     // })\r\n                     // this.books.splice(index,1)\r\n                 },\r\n                 queryData:function(){\r\n-                    //\r\n+                    axios\r\n                 }\r\n             },\r\n             //常用特性：侦听器\r\n             //验证图书名称是否已经存在\r\n"
                },
                {
                    "date": 1629787689458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,9 @@\n                     //     return item.id==id\r\n                     // })\r\n                     // this.books.splice(index,1)\r\n                 },\r\n-                queryData:function(){\r\n+                queryData:async function(){\r\n                     axios\r\n                 }\r\n             },\r\n             //常用特性：侦听器\r\n"
                },
                {
                    "date": 1629787753719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,10 +163,10 @@\n                     //     return item.id==id\r\n                     // })\r\n                     // this.books.splice(index,1)\r\n                 },\r\n-                queryData:async function(){\r\n-                    axios\r\n+                queryData: async function(){\r\n+                    this.books=await axios.get('/books')\r\n                 }\r\n             },\r\n             //常用特性：侦听器\r\n             //验证图书名称是否已经存在\r\n@@ -192,22 +192,22 @@\n             //生命周期\r\n             //该生命周期钩子函数被触发时，模板已经可以使用\r\n             //一般用于获取后台数据，然后把数据填充到模板\r\n             mounted:function(){\r\n-                var data=[{\r\n-                    id: 1,\r\n-                    name: '三国演义',\r\n-                    date: 2525609975000\r\n-                }, {\r\n-                    id: 2,\r\n-                    name: '水浒传',\r\n-                    date: 2525609975000\r\n-                }, {\r\n-                    id: 3,\r\n-                    name: '红楼梦',\r\n-                    date: 2525609975000\r\n-                }]\r\n-                this.books=data\r\n+                // var data=[{\r\n+                //     id: 1,\r\n+                //     name: '三国演义',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 2,\r\n+                //     name: '水浒传',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 3,\r\n+                //     name: '红楼梦',\r\n+                //     date: 2525609975000\r\n+                // }]\r\n+                this.queryData()\r\n             }\r\n         })\r\n     </script>\r\n </body>\r\n"
                },
                {
                    "date": 1629788681354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,8 +206,11 @@\n                 //     name: '红楼梦',\r\n                 //     date: 2525609975000\r\n                 // }]\r\n                 this.queryData()\r\n+                axios.get('books').then((data)=>{\r\n+                    console.log(data.data);\r\n+                })\r\n             }\r\n         })\r\n     </script>\r\n </body>\r\n"
                },
                {
                    "date": 1629788687698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,9 +206,9 @@\n                 //     name: '红楼梦',\r\n                 //     date: 2525609975000\r\n                 // }]\r\n                 this.queryData()\r\n-                axios.get('books').then((data)=>{\r\n+                axios.get('/books').then((data)=>{\r\n                     console.log(data.data);\r\n                 })\r\n             }\r\n         })\r\n"
                },
                {
                    "date": 1629788705980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,218 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+\r\n+<head>\r\n+    <meta charset=\"UTF-8\">\r\n+    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+    <title>Document</title>\r\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n+</head>\r\n+\r\n+<body>\r\n+    <div id=\"app\">\r\n+        <div class=\"grid\">\r\n+            <div>\r\n+                <h2>图书管理</h2>\r\n+                <div class=\"book\">\r\n+                    <label for=\"id\">编号：</label>\r\n+                    <input type=\"text\" id=\"id\" v-model='id' :disabled=\"idFlag\" v-focus>\r\n+                    <label for=\"name\">名称：</label>\r\n+                    <input type=\"text\" id=\"name\" v-model='name'>\r\n+                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n+                </div>\r\n+                <div class=\"total\">\r\n+                    <span>图书总数：</span>\r\n+                    <span>{{total}}</span>\r\n+                </div>\r\n+            </div>\r\n+            <table>\r\n+                <thead>\r\n+                    <tr>\r\n+                        <th>编号</th>\r\n+                        <th>名称</th>\r\n+                        <th>时间</th>\r\n+                        <th>操作</th>\r\n+                    </tr>\r\n+                </thead>\r\n+                <tbody>\r\n+                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n+                        <td>{{item.id}}</td>\r\n+                        <td>{{item.name}}</td>\r\n+                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n+                        <td>\r\n+                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n+                            <span>|</span>\r\n+                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n+                        </td>\r\n+                    </tr>\r\n+                </tbody>\r\n+            </table>\r\n+        </div>\r\n+    </div>\r\n+    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n+    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n+\r\n+    <script>\r\n+        axios.defaults.baseURL='http://localhost:3000'\r\n+        axios.interceptors.response.use((res)=>{\r\n+            return res.data\r\n+        },(error)=>{\r\n+            console.log(error);\r\n+        })\r\n+\r\n+        //常用特性：自定义指令\r\n+        Vue.directive('focus', {\r\n+            inserted: function (el) {\r\n+                el.focus()\r\n+            }\r\n+        })\r\n+        //常用特性：过滤器\r\n+        Vue.filter('format', function (value, arg) {\r\n+            function dateFormat(date, format) {\r\n+                if (typeof date === \"string\") {\r\n+                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n+                    if (mts && mts.length >= 3) {\r\n+                        date = parseInt(mts[2]);\r\n+                    }\r\n+                }\r\n+                date = new Date(date);\r\n+                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n+                    return \"\";\r\n+                }\r\n+                var map = {\r\n+                    \"M\": date.getMonth() + 1, //月份 \r\n+                    \"d\": date.getDate(), //日 \r\n+                    \"h\": date.getHours(), //小时 \r\n+                    \"m\": date.getMinutes(), //分 \r\n+                    \"s\": date.getSeconds(), //秒 \r\n+                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n+                    \"S\": date.getMilliseconds() //毫秒 \r\n+                };\r\n+                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n+                    var v = map[t];\r\n+                    if (v !== undefined) {\r\n+                        if (all.length > 1) {\r\n+                            v = '0' + v;\r\n+                            v = v.substr(v.length - 2);\r\n+                        }\r\n+                        return v;\r\n+                    } else if (t === 'y') {\r\n+                        return (date.getFullYear() + '').substr(4 - all.length);\r\n+                    }\r\n+                    return all;\r\n+                });\r\n+                return format;\r\n+            }\r\n+            return dateFormat(value, arg);\r\n+        })\r\n+        var vm = new Vue({\r\n+            el: '#app',\r\n+            data: {\r\n+                id: '',\r\n+                name: '',\r\n+                idFlag: false,\r\n+                submitFlag:false,\r\n+                books: []\r\n+            },\r\n+            methods: {\r\n+                handle: async function () {\r\n+                    if (this.idFlag) {\r\n+                        //true:禁用状态，则为修改\r\n+                        //在books中根据id查找对应的book\r\n+                        this.books.some((item) => {\r\n+                            if (item.id == this.id) {\r\n+                                //将修改后的名称赋值给对应的book\r\n+                                item.name = this.name\r\n+                                return true\r\n+                            }\r\n+                        })\r\n+                        //修改完成后需要将编号的状态取消禁用\r\n+                        this.idFlag = false\r\n+                    } else {\r\n+                        //否则为添加\r\n+                        var ret=await axios.get('books',{\r\n+                            name:this.name\r\n+                        })\r\n+                        if(ret.status===200){\r\n+                            //重新加载图书列表数据\r\n+                            this.queryData()\r\n+                        }\r\n+                    }\r\n+                    //清空表单\r\n+                    this.id = ''\r\n+                    this.name = ''\r\n+                },\r\n+                toEdit: function (id) {\r\n+                    //禁止修改id\r\n+                    this.idFlag = true\r\n+                    //根据id找book\r\n+                    var book = this.books.filter(function (item) {\r\n+                        return item.id == id\r\n+                    })\r\n+                    this.id = book[0].id\r\n+                    this.name = book[0].name\r\n+                },\r\n+                toDelete: function (id) {\r\n+                    //方法一：利用filter方法把某个book从books中过滤掉\r\n+                    this.books = this.books.filter((item) => {\r\n+                        return item.id != id\r\n+                    })\r\n+                    //方法二：根据id找到对应的books索引\r\n+                    // var index=this.books.findIndex((item)=>{\r\n+                    //     return item.id==id\r\n+                    // })\r\n+                    // this.books.splice(index,1)\r\n+                },\r\n+                queryData: async function(){\r\n+                    this.books=await axios.get('/books')\r\n+                }\r\n+            },\r\n+            //常用特性：侦听器\r\n+            //验证图书名称是否已经存在\r\n+            watch:{\r\n+                name:function(val){\r\n+                    var nameFlag=this.books.some((item)=>{\r\n+                        return item.name===val\r\n+                    })\r\n+                    if(nameFlag){\r\n+                        //说明图书名称存在\r\n+                        this.submitFlag=true  //禁用提交按钮\r\n+                    }else{\r\n+                        this.submitFlag=false\r\n+                    }\r\n+                }\r\n+            },\r\n+            //常用特性：计算属性\r\n+            computed:{\r\n+                total:function(){\r\n+                    return this.books.length\r\n+                }\r\n+            },\r\n+            //生命周期\r\n+            //该生命周期钩子函数被触发时，模板已经可以使用\r\n+            //一般用于获取后台数据，然后把数据填充到模板\r\n+            mounted:function(){\r\n+                // var data=[{\r\n+                //     id: 1,\r\n+                //     name: '三国演义',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 2,\r\n+                //     name: '水浒传',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 3,\r\n+                //     name: '红楼梦',\r\n+                //     date: 2525609975000\r\n+                // }]\r\n+                this.queryData()\r\n+                axios.get('/books').then((data)=>{\r\n+                    console.log(data);\r\n+                })\r\n+            }\r\n+        })\r\n+    </script>\r\n+</body>\r\n+\r\n+</html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1629788746053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,231 +206,13 @@\n                 //     name: '红楼梦',\r\n                 //     date: 2525609975000\r\n                 // }]\r\n                 this.queryData()\r\n-                axios.get('/books').then((data)=>{\r\n-                    console.log(data);\r\n-                })\r\n+                \r\n+                var ret=await axios.get('books')\r\n+                console.log(ret);\r\n             }\r\n         })\r\n     </script>\r\n </body>\r\n \r\n-</html>\n-<!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-\r\n-<head>\r\n-    <meta charset=\"UTF-8\">\r\n-    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n-    <title>Document</title>\r\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n-</head>\r\n-\r\n-<body>\r\n-    <div id=\"app\">\r\n-        <div class=\"grid\">\r\n-            <div>\r\n-                <h2>图书管理</h2>\r\n-                <div class=\"book\">\r\n-                    <label for=\"id\">编号：</label>\r\n-                    <input type=\"text\" id=\"id\" v-model='id' :disabled=\"idFlag\" v-focus>\r\n-                    <label for=\"name\">名称：</label>\r\n-                    <input type=\"text\" id=\"name\" v-model='name'>\r\n-                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n-                </div>\r\n-                <div class=\"total\">\r\n-                    <span>图书总数：</span>\r\n-                    <span>{{total}}</span>\r\n-                </div>\r\n-            </div>\r\n-            <table>\r\n-                <thead>\r\n-                    <tr>\r\n-                        <th>编号</th>\r\n-                        <th>名称</th>\r\n-                        <th>时间</th>\r\n-                        <th>操作</th>\r\n-                    </tr>\r\n-                </thead>\r\n-                <tbody>\r\n-                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n-                        <td>{{item.id}}</td>\r\n-                        <td>{{item.name}}</td>\r\n-                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n-                        <td>\r\n-                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n-                            <span>|</span>\r\n-                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n-                        </td>\r\n-                    </tr>\r\n-                </tbody>\r\n-            </table>\r\n-        </div>\r\n-    </div>\r\n-    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n-    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n-\r\n-    <script>\r\n-        axios.defaults.baseURL='http://localhost:3000'\r\n-        axios.interceptors.response.use((res)=>{\r\n-            return res.data\r\n-        },(error)=>{\r\n-            console.log(error);\r\n-        })\r\n-\r\n-        //常用特性：自定义指令\r\n-        Vue.directive('focus', {\r\n-            inserted: function (el) {\r\n-                el.focus()\r\n-            }\r\n-        })\r\n-        //常用特性：过滤器\r\n-        Vue.filter('format', function (value, arg) {\r\n-            function dateFormat(date, format) {\r\n-                if (typeof date === \"string\") {\r\n-                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n-                    if (mts && mts.length >= 3) {\r\n-                        date = parseInt(mts[2]);\r\n-                    }\r\n-                }\r\n-                date = new Date(date);\r\n-                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n-                    return \"\";\r\n-                }\r\n-                var map = {\r\n-                    \"M\": date.getMonth() + 1, //月份 \r\n-                    \"d\": date.getDate(), //日 \r\n-                    \"h\": date.getHours(), //小时 \r\n-                    \"m\": date.getMinutes(), //分 \r\n-                    \"s\": date.getSeconds(), //秒 \r\n-                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n-                    \"S\": date.getMilliseconds() //毫秒 \r\n-                };\r\n-                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n-                    var v = map[t];\r\n-                    if (v !== undefined) {\r\n-                        if (all.length > 1) {\r\n-                            v = '0' + v;\r\n-                            v = v.substr(v.length - 2);\r\n-                        }\r\n-                        return v;\r\n-                    } else if (t === 'y') {\r\n-                        return (date.getFullYear() + '').substr(4 - all.length);\r\n-                    }\r\n-                    return all;\r\n-                });\r\n-                return format;\r\n-            }\r\n-            return dateFormat(value, arg);\r\n-        })\r\n-        var vm = new Vue({\r\n-            el: '#app',\r\n-            data: {\r\n-                id: '',\r\n-                name: '',\r\n-                idFlag: false,\r\n-                submitFlag:false,\r\n-                books: []\r\n-            },\r\n-            methods: {\r\n-                handle: async function () {\r\n-                    if (this.idFlag) {\r\n-                        //true:禁用状态，则为修改\r\n-                        //在books中根据id查找对应的book\r\n-                        this.books.some((item) => {\r\n-                            if (item.id == this.id) {\r\n-                                //将修改后的名称赋值给对应的book\r\n-                                item.name = this.name\r\n-                                return true\r\n-                            }\r\n-                        })\r\n-                        //修改完成后需要将编号的状态取消禁用\r\n-                        this.idFlag = false\r\n-                    } else {\r\n-                        //否则为添加\r\n-                        var ret=await axios.get('books',{\r\n-                            name:this.name\r\n-                        })\r\n-                        if(ret.status===200){\r\n-                            //重新加载图书列表数据\r\n-                            this.queryData()\r\n-                        }\r\n-                    }\r\n-                    //清空表单\r\n-                    this.id = ''\r\n-                    this.name = ''\r\n-                },\r\n-                toEdit: function (id) {\r\n-                    //禁止修改id\r\n-                    this.idFlag = true\r\n-                    //根据id找book\r\n-                    var book = this.books.filter(function (item) {\r\n-                        return item.id == id\r\n-                    })\r\n-                    this.id = book[0].id\r\n-                    this.name = book[0].name\r\n-                },\r\n-                toDelete: function (id) {\r\n-                    //方法一：利用filter方法把某个book从books中过滤掉\r\n-                    this.books = this.books.filter((item) => {\r\n-                        return item.id != id\r\n-                    })\r\n-                    //方法二：根据id找到对应的books索引\r\n-                    // var index=this.books.findIndex((item)=>{\r\n-                    //     return item.id==id\r\n-                    // })\r\n-                    // this.books.splice(index,1)\r\n-                },\r\n-                queryData: async function(){\r\n-                    this.books=await axios.get('/books')\r\n-                }\r\n-            },\r\n-            //常用特性：侦听器\r\n-            //验证图书名称是否已经存在\r\n-            watch:{\r\n-                name:function(val){\r\n-                    var nameFlag=this.books.some((item)=>{\r\n-                        return item.name===val\r\n-                    })\r\n-                    if(nameFlag){\r\n-                        //说明图书名称存在\r\n-                        this.submitFlag=true  //禁用提交按钮\r\n-                    }else{\r\n-                        this.submitFlag=false\r\n-                    }\r\n-                }\r\n-            },\r\n-            //常用特性：计算属性\r\n-            computed:{\r\n-                total:function(){\r\n-                    return this.books.length\r\n-                }\r\n-            },\r\n-            //生命周期\r\n-            //该生命周期钩子函数被触发时，模板已经可以使用\r\n-            //一般用于获取后台数据，然后把数据填充到模板\r\n-            mounted:function(){\r\n-                // var data=[{\r\n-                //     id: 1,\r\n-                //     name: '三国演义',\r\n-                //     date: 2525609975000\r\n-                // }, {\r\n-                //     id: 2,\r\n-                //     name: '水浒传',\r\n-                //     date: 2525609975000\r\n-                // }, {\r\n-                //     id: 3,\r\n-                //     name: '红楼梦',\r\n-                //     date: 2525609975000\r\n-                // }]\r\n-                this.queryData()\r\n-                axios.get('/books').then((data)=>{\r\n-                    console.log(data.data);\r\n-                })\r\n-            }\r\n-        })\r\n-    </script>\r\n-</body>\r\n-\r\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1629788870858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,10 +207,8 @@\n                 //     date: 2525609975000\r\n                 // }]\r\n                 this.queryData()\r\n                 \r\n-                var ret=await axios.get('books')\r\n-                console.log(ret);\r\n             }\r\n         })\r\n     </script>\r\n </body>\r\n"
                },
                {
                    "date": 1629789003169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n             el: '#app',\r\n             data: {\r\n                 id: '',\r\n                 name: '',\r\n-                idFlag: false,\r\n+                idFlag: true,\r\n                 submitFlag:false,\r\n                 books: []\r\n             },\r\n             methods: {\r\n"
                },
                {
                    "date": 1629789177637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n             el: '#app',\r\n             data: {\r\n                 id: '',\r\n                 name: '',\r\n-                idFlag: true,\r\n+                idFlag: false,\r\n                 submitFlag:false,\r\n                 books: []\r\n             },\r\n             methods: {\r\n"
                },
                {
                    "date": 1629789216779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,9 +133,9 @@\n                         //否则为添加\r\n                         var ret=await axios.get('books',{\r\n                             name:this.name\r\n                         })\r\n-                        if(ret.status===200){\r\n+                        if(ret.status==200){\r\n                             //重新加载图书列表数据\r\n                             this.queryData()\r\n                         }\r\n                     }\r\n"
                },
                {
                    "date": 1629789230631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,8 +133,9 @@\n                         //否则为添加\r\n                         var ret=await axios.get('books',{\r\n                             name:this.name\r\n                         })\r\n+                        console.log(ret);\r\n                         if(ret.status==200){\r\n                             //重新加载图书列表数据\r\n                             this.queryData()\r\n                         }\r\n"
                },
                {
                    "date": 1629789278596,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n                     <label for=\"id\">编号：</label>\r\n                     <input type=\"text\" id=\"id\" v-model='id' :disabled=\"idFlag\" v-focus>\r\n                     <label for=\"name\">名称：</label>\r\n                     <input type=\"text\" id=\"name\" v-model='name'>\r\n-                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n+                    <button @click='handle' @key.enter='handle' :disabled=\"submitFlag\">提交</button>\r\n                 </div>\r\n                 <div class=\"total\">\r\n                     <span>图书总数：</span>\r\n                     <span>{{total}}</span>\r\n"
                },
                {
                    "date": 1629789307260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n                         //修改完成后需要将编号的状态取消禁用\r\n                         this.idFlag = false\r\n                     } else {\r\n                         //否则为添加\r\n-                        var ret=await axios.get('books',{\r\n+                        var ret=await axios.post('books',{\r\n                             name:this.name\r\n                         })\r\n                         console.log(ret);\r\n                         if(ret.status==200){\r\n"
                },
                {
                    "date": 1629789335512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,10 @@\n                 <div class=\"book\">\r\n                     <label for=\"id\">编号：</label>\r\n                     <input type=\"text\" id=\"id\" v-model='id' :disabled=\"idFlag\" v-focus>\r\n                     <label for=\"name\">名称：</label>\r\n-                    <input type=\"text\" id=\"name\" v-model='name'>\r\n-                    <button @click='handle' @key.enter='handle' :disabled=\"submitFlag\">提交</button>\r\n+                    <input type=\"text\" id=\"name\" v-model='name' @key.enter='handle'>\r\n+                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n                 </div>\r\n                 <div class=\"total\">\r\n                     <span>图书总数：</span>\r\n                     <span>{{total}}</span>\r\n"
                },
                {
                    "date": 1629789594061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,217 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+\r\n+<head>\r\n+    <meta charset=\"UTF-8\">\r\n+    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+    <title>Document</title>\r\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n+</head>\r\n+\r\n+<body>\r\n+    <div id=\"app\">\r\n+        <div class=\"grid\">\r\n+            <div>\r\n+                <h2>图书管理</h2>\r\n+                <div class=\"book\">\r\n+                    <label for=\"id\">编号：</label>\r\n+                    <input type=\"text\" id=\"id\" v-model='id' :disabled=\"idFlag\" v-focus>\r\n+                    <label for=\"name\">名称：</label>\r\n+                    <input type=\"text\" id=\"name\" v-model='name' @keyup.enter='handle'>\r\n+                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n+                </div>\r\n+                <div class=\"total\">\r\n+                    <span>图书总数：</span>\r\n+                    <span>{{total}}</span>\r\n+                </div>\r\n+            </div>\r\n+            <table>\r\n+                <thead>\r\n+                    <tr>\r\n+                        <th>编号</th>\r\n+                        <th>名称</th>\r\n+                        <th>时间</th>\r\n+                        <th>操作</th>\r\n+                    </tr>\r\n+                </thead>\r\n+                <tbody>\r\n+                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n+                        <td>{{item.id}}</td>\r\n+                        <td>{{item.name}}</td>\r\n+                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n+                        <td>\r\n+                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n+                            <span>|</span>\r\n+                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n+                        </td>\r\n+                    </tr>\r\n+                </tbody>\r\n+            </table>\r\n+        </div>\r\n+    </div>\r\n+    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n+    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n+\r\n+    <script>\r\n+        axios.defaults.baseURL='http://localhost:3000'\r\n+        axios.interceptors.response.use((res)=>{\r\n+            return res.data\r\n+        },(error)=>{\r\n+            console.log(error);\r\n+        })\r\n+\r\n+        //常用特性：自定义指令\r\n+        Vue.directive('focus', {\r\n+            inserted: function (el) {\r\n+                el.focus()\r\n+            }\r\n+        })\r\n+        //常用特性：过滤器\r\n+        Vue.filter('format', function (value, arg) {\r\n+            function dateFormat(date, format) {\r\n+                if (typeof date === \"string\") {\r\n+                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n+                    if (mts && mts.length >= 3) {\r\n+                        date = parseInt(mts[2]);\r\n+                    }\r\n+                }\r\n+                date = new Date(date);\r\n+                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n+                    return \"\";\r\n+                }\r\n+                var map = {\r\n+                    \"M\": date.getMonth() + 1, //月份 \r\n+                    \"d\": date.getDate(), //日 \r\n+                    \"h\": date.getHours(), //小时 \r\n+                    \"m\": date.getMinutes(), //分 \r\n+                    \"s\": date.getSeconds(), //秒 \r\n+                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n+                    \"S\": date.getMilliseconds() //毫秒 \r\n+                };\r\n+                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n+                    var v = map[t];\r\n+                    if (v !== undefined) {\r\n+                        if (all.length > 1) {\r\n+                            v = '0' + v;\r\n+                            v = v.substr(v.length - 2);\r\n+                        }\r\n+                        return v;\r\n+                    } else if (t === 'y') {\r\n+                        return (date.getFullYear() + '').substr(4 - all.length);\r\n+                    }\r\n+                    return all;\r\n+                });\r\n+                return format;\r\n+            }\r\n+            return dateFormat(value, arg);\r\n+        })\r\n+        var vm = new Vue({\r\n+            el: '#app',\r\n+            data: {\r\n+                id: '',\r\n+                name: '',\r\n+                idFlag: false,\r\n+                submitFlag:false,\r\n+                books: []\r\n+            },\r\n+            methods: {\r\n+                handle: async function () {\r\n+                    if (this.idFlag) {\r\n+                        //true:禁用状态，则为修改\r\n+                        //在books中根据id查找对应的book\r\n+                        this.books.some((item) => {\r\n+                            if (item.id == this.id) {\r\n+                                //将修改后的名称赋值给对应的book\r\n+                                item.name = this.name\r\n+                                return true\r\n+                            }\r\n+                        })\r\n+                        //修改完成后需要将编号的状态取消禁用\r\n+                        this.idFlag = false\r\n+                    } else {\r\n+                        //否则为添加\r\n+                        var ret=await axios.post('books',{\r\n+                            name:this.name\r\n+                        })\r\n+                        console.log(ret);\r\n+                        if(ret.status==200){\r\n+                            //重新加载图书列表数据\r\n+                            this.queryData()\r\n+                        }\r\n+                    }\r\n+                    //清空表单\r\n+                    this.id = ''\r\n+                    this.name = ''\r\n+                },\r\n+                toEdit: function (id) {\r\n+                    //禁止修改id\r\n+                    this.idFlag = true\r\n+                    //根据id找book\r\n+                    var book = this.books.filter(function (item) {\r\n+                        return item.id == id\r\n+                    })\r\n+                    this.id = book[0].id\r\n+                    this.name = book[0].name\r\n+                },\r\n+                toDelete: function (id) {\r\n+                    //方法一：利用filter方法把某个book从books中过滤掉\r\n+                    this.books = this.books.filter((item) => {\r\n+                        return item.id != id\r\n+                    })\r\n+                    //方法二：根据id找到对应的books索引\r\n+                    // var index=this.books.findIndex((item)=>{\r\n+                    //     return item.id==id\r\n+                    // })\r\n+                    // this.books.splice(index,1)\r\n+                },\r\n+                queryData: async function(){\r\n+                    this.books=await axios.get('/books')\r\n+                }\r\n+            },\r\n+            //常用特性：侦听器\r\n+            //验证图书名称是否已经存在\r\n+            watch:{\r\n+                name:function(val){\r\n+                    var nameFlag=this.books.some((item)=>{\r\n+                        return item.name===val\r\n+                    })\r\n+                    if(nameFlag){\r\n+                        //说明图书名称存在\r\n+                        this.submitFlag=true  //禁用提交按钮\r\n+                    }else{\r\n+                        this.submitFlag=false\r\n+                    }\r\n+                }\r\n+            },\r\n+            //常用特性：计算属性\r\n+            computed:{\r\n+                total:function(){\r\n+                    return this.books.length\r\n+                }\r\n+            },\r\n+            //生命周期\r\n+            //该生命周期钩子函数被触发时，模板已经可以使用\r\n+            //一般用于获取后台数据，然后把数据填充到模板\r\n+            mounted:function(){\r\n+                // var data=[{\r\n+                //     id: 1,\r\n+                //     name: '三国演义',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 2,\r\n+                //     name: '水浒传',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 3,\r\n+                //     name: '红楼梦',\r\n+                //     date: 2525609975000\r\n+                // }]\r\n+                this.queryData()\r\n+                \r\n+            }\r\n+        })\r\n+    </script>\r\n+</body>\r\n+\r\n+</html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1629789646036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,216 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+\r\n+<head>\r\n+    <meta charset=\"UTF-8\">\r\n+    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+    <title>Document</title>\r\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n+</head>\r\n+\r\n+<body>\r\n+    <div id=\"app\">\r\n+        <div class=\"grid\">\r\n+            <div>\r\n+                <h2>图书管理</h2>\r\n+                <div class=\"book\">\r\n+                    <label for=\"id\">编号：</label>\r\n+                    <input type=\"text\" id=\"id\" v-model='id' :disabled=\"idFlag\" v-focus>\r\n+                    <label for=\"name\">名称：</label>\r\n+                    <input type=\"text\" id=\"name\" v-model='name' @keyup.enter='handle'>\r\n+                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n+                </div>\r\n+                <div class=\"total\">\r\n+                    <span>图书总数：</span>\r\n+                    <span>{{total}}</span>\r\n+                </div>\r\n+            </div>\r\n+            <table>\r\n+                <thead>\r\n+                    <tr>\r\n+                        <th>编号</th>\r\n+                        <th>名称</th>\r\n+                        <th>时间</th>\r\n+                        <th>操作</th>\r\n+                    </tr>\r\n+                </thead>\r\n+                <tbody>\r\n+                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n+                        <td>{{item.id}}</td>\r\n+                        <td>{{item.name}}</td>\r\n+                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n+                        <td>\r\n+                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n+                            <span>|</span>\r\n+                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n+                        </td>\r\n+                    </tr>\r\n+                </tbody>\r\n+            </table>\r\n+        </div>\r\n+    </div>\r\n+    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n+    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n+\r\n+    <script>\r\n+        axios.defaults.baseURL='http://localhost:3000'\r\n+        axios.interceptors.response.use((res)=>{\r\n+            return res.data\r\n+        },(error)=>{\r\n+            console.log(error);\r\n+        })\r\n+\r\n+        //常用特性：自定义指令\r\n+        Vue.directive('focus', {\r\n+            inserted: function (el) {\r\n+                el.focus()\r\n+            }\r\n+        })\r\n+        //常用特性：过滤器\r\n+        Vue.filter('format', function (value, arg) {\r\n+            function dateFormat(date, format) {\r\n+                if (typeof date === \"string\") {\r\n+                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n+                    if (mts && mts.length >= 3) {\r\n+                        date = parseInt(mts[2]);\r\n+                    }\r\n+                }\r\n+                date = new Date(date);\r\n+                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n+                    return \"\";\r\n+                }\r\n+                var map = {\r\n+                    \"M\": date.getMonth() + 1, //月份 \r\n+                    \"d\": date.getDate(), //日 \r\n+                    \"h\": date.getHours(), //小时 \r\n+                    \"m\": date.getMinutes(), //分 \r\n+                    \"s\": date.getSeconds(), //秒 \r\n+                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n+                    \"S\": date.getMilliseconds() //毫秒 \r\n+                };\r\n+                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n+                    var v = map[t];\r\n+                    if (v !== undefined) {\r\n+                        if (all.length > 1) {\r\n+                            v = '0' + v;\r\n+                            v = v.substr(v.length - 2);\r\n+                        }\r\n+                        return v;\r\n+                    } else if (t === 'y') {\r\n+                        return (date.getFullYear() + '').substr(4 - all.length);\r\n+                    }\r\n+                    return all;\r\n+                });\r\n+                return format;\r\n+            }\r\n+            return dateFormat(value, arg);\r\n+        })\r\n+        var vm = new Vue({\r\n+            el: '#app',\r\n+            data: {\r\n+                id: '',\r\n+                name: '',\r\n+                idFlag: false,\r\n+                submitFlag:false,\r\n+                books: []\r\n+            },\r\n+            methods: {\r\n+                handle: async function () {\r\n+                    if (this.idFlag) {\r\n+                        //true:禁用状态，则为修改\r\n+                        //在books中根据id查找对应的book\r\n+                        this.books.some((item) => {\r\n+                            if (item.id == this.id) {\r\n+                                //将修改后的名称赋值给对应的book\r\n+                                item.name = this.name\r\n+                                return true\r\n+                            }\r\n+                        })\r\n+                        //修改完成后需要将编号的状态取消禁用\r\n+                        this.idFlag = false\r\n+                    } else {\r\n+                        //否则为添加\r\n+                        var ret=await axios.post('books',{\r\n+                            name:this.name\r\n+                        })\r\n+                        if(ret.status==200){\r\n+                            //重新加载图书列表数据\r\n+                            this.queryData()\r\n+                        }\r\n+                    }\r\n+                    //清空表单\r\n+                    this.id = ''\r\n+                    this.name = ''\r\n+                },\r\n+                toEdit: function (id) {\r\n+                    //禁止修改id\r\n+                    this.idFlag = true\r\n+                    //根据id找book\r\n+                    var book = this.books.filter(function (item) {\r\n+                        return item.id == id\r\n+                    })\r\n+                    this.id = book[0].id\r\n+                    this.name = book[0].name\r\n+                },\r\n+                toDelete: function (id) {\r\n+                    //方法一：利用filter方法把某个book从books中过滤掉\r\n+                    this.books = this.books.filter((item) => {\r\n+                        return item.id != id\r\n+                    })\r\n+                    //方法二：根据id找到对应的books索引\r\n+                    // var index=this.books.findIndex((item)=>{\r\n+                    //     return item.id==id\r\n+                    // })\r\n+                    // this.books.splice(index,1)\r\n+                },\r\n+                queryData: async function(){\r\n+                    this.books=await axios.get('/books')\r\n+                }\r\n+            },\r\n+            //常用特性：侦听器\r\n+            //验证图书名称是否已经存在\r\n+            watch:{\r\n+                name:function(val){\r\n+                    var nameFlag=this.books.some((item)=>{\r\n+                        return item.name===val\r\n+                    })\r\n+                    if(nameFlag){\r\n+                        //说明图书名称存在\r\n+                        this.submitFlag=true  //禁用提交按钮\r\n+                    }else{\r\n+                        this.submitFlag=false\r\n+                    }\r\n+                }\r\n+            },\r\n+            //常用特性：计算属性\r\n+            computed:{\r\n+                total:function(){\r\n+                    return this.books.length\r\n+                }\r\n+            },\r\n+            //生命周期\r\n+            //该生命周期钩子函数被触发时，模板已经可以使用\r\n+            //一般用于获取后台数据，然后把数据填充到模板\r\n+            mounted:function(){\r\n+                // var data=[{\r\n+                //     id: 1,\r\n+                //     name: '三国演义',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 2,\r\n+                //     name: '水浒传',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 3,\r\n+                //     name: '红楼梦',\r\n+                //     date: 2525609975000\r\n+                // }]\r\n+                this.queryData()\r\n+                \r\n+            }\r\n+        })\r\n+    </script>\r\n+</body>\r\n+\r\n+</html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1629789717087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n             <div>\r\n                 <h2>图书管理</h2>\r\n                 <div class=\"book\">\r\n                     <label for=\"id\">编号：</label>\r\n-                    <input type=\"text\" id=\"id\" v-model='id' :disabled=\"idFlag\" v-focus>\r\n+                    <input type=\"text\" id=\"id\" v-model='id' disabled=\"false\" v-focus>\r\n                     <label for=\"name\">名称：</label>\r\n                     <input type=\"text\" id=\"name\" v-model='name' @keyup.enter='handle'>\r\n                     <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n                 </div>\r\n@@ -212,439 +212,5 @@\n         })\r\n     </script>\r\n </body>\r\n \r\n-</html>\n-<!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-\r\n-<head>\r\n-    <meta charset=\"UTF-8\">\r\n-    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n-    <title>Document</title>\r\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n-</head>\r\n-\r\n-<body>\r\n-    <div id=\"app\">\r\n-        <div class=\"grid\">\r\n-            <div>\r\n-                <h2>图书管理</h2>\r\n-                <div class=\"book\">\r\n-                    <label for=\"id\">编号：</label>\r\n-                    <input type=\"text\" id=\"id\" v-model='id' :disabled=\"idFlag\" v-focus>\r\n-                    <label for=\"name\">名称：</label>\r\n-                    <input type=\"text\" id=\"name\" v-model='name' @keyup.enter='handle'>\r\n-                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n-                </div>\r\n-                <div class=\"total\">\r\n-                    <span>图书总数：</span>\r\n-                    <span>{{total}}</span>\r\n-                </div>\r\n-            </div>\r\n-            <table>\r\n-                <thead>\r\n-                    <tr>\r\n-                        <th>编号</th>\r\n-                        <th>名称</th>\r\n-                        <th>时间</th>\r\n-                        <th>操作</th>\r\n-                    </tr>\r\n-                </thead>\r\n-                <tbody>\r\n-                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n-                        <td>{{item.id}}</td>\r\n-                        <td>{{item.name}}</td>\r\n-                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n-                        <td>\r\n-                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n-                            <span>|</span>\r\n-                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n-                        </td>\r\n-                    </tr>\r\n-                </tbody>\r\n-            </table>\r\n-        </div>\r\n-    </div>\r\n-    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n-    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n-\r\n-    <script>\r\n-        axios.defaults.baseURL='http://localhost:3000'\r\n-        axios.interceptors.response.use((res)=>{\r\n-            return res.data\r\n-        },(error)=>{\r\n-            console.log(error);\r\n-        })\r\n-\r\n-        //常用特性：自定义指令\r\n-        Vue.directive('focus', {\r\n-            inserted: function (el) {\r\n-                el.focus()\r\n-            }\r\n-        })\r\n-        //常用特性：过滤器\r\n-        Vue.filter('format', function (value, arg) {\r\n-            function dateFormat(date, format) {\r\n-                if (typeof date === \"string\") {\r\n-                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n-                    if (mts && mts.length >= 3) {\r\n-                        date = parseInt(mts[2]);\r\n-                    }\r\n-                }\r\n-                date = new Date(date);\r\n-                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n-                    return \"\";\r\n-                }\r\n-                var map = {\r\n-                    \"M\": date.getMonth() + 1, //月份 \r\n-                    \"d\": date.getDate(), //日 \r\n-                    \"h\": date.getHours(), //小时 \r\n-                    \"m\": date.getMinutes(), //分 \r\n-                    \"s\": date.getSeconds(), //秒 \r\n-                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n-                    \"S\": date.getMilliseconds() //毫秒 \r\n-                };\r\n-                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n-                    var v = map[t];\r\n-                    if (v !== undefined) {\r\n-                        if (all.length > 1) {\r\n-                            v = '0' + v;\r\n-                            v = v.substr(v.length - 2);\r\n-                        }\r\n-                        return v;\r\n-                    } else if (t === 'y') {\r\n-                        return (date.getFullYear() + '').substr(4 - all.length);\r\n-                    }\r\n-                    return all;\r\n-                });\r\n-                return format;\r\n-            }\r\n-            return dateFormat(value, arg);\r\n-        })\r\n-        var vm = new Vue({\r\n-            el: '#app',\r\n-            data: {\r\n-                id: '',\r\n-                name: '',\r\n-                idFlag: false,\r\n-                submitFlag:false,\r\n-                books: []\r\n-            },\r\n-            methods: {\r\n-                handle: async function () {\r\n-                    if (this.idFlag) {\r\n-                        //true:禁用状态，则为修改\r\n-                        //在books中根据id查找对应的book\r\n-                        this.books.some((item) => {\r\n-                            if (item.id == this.id) {\r\n-                                //将修改后的名称赋值给对应的book\r\n-                                item.name = this.name\r\n-                                return true\r\n-                            }\r\n-                        })\r\n-                        //修改完成后需要将编号的状态取消禁用\r\n-                        this.idFlag = false\r\n-                    } else {\r\n-                        //否则为添加\r\n-                        var ret=await axios.post('books',{\r\n-                            name:this.name\r\n-                        })\r\n-                        console.log(ret);\r\n-                        if(ret.status==200){\r\n-                            //重新加载图书列表数据\r\n-                            this.queryData()\r\n-                        }\r\n-                    }\r\n-                    //清空表单\r\n-                    this.id = ''\r\n-                    this.name = ''\r\n-                },\r\n-                toEdit: function (id) {\r\n-                    //禁止修改id\r\n-                    this.idFlag = true\r\n-                    //根据id找book\r\n-                    var book = this.books.filter(function (item) {\r\n-                        return item.id == id\r\n-                    })\r\n-                    this.id = book[0].id\r\n-                    this.name = book[0].name\r\n-                },\r\n-                toDelete: function (id) {\r\n-                    //方法一：利用filter方法把某个book从books中过滤掉\r\n-                    this.books = this.books.filter((item) => {\r\n-                        return item.id != id\r\n-                    })\r\n-                    //方法二：根据id找到对应的books索引\r\n-                    // var index=this.books.findIndex((item)=>{\r\n-                    //     return item.id==id\r\n-                    // })\r\n-                    // this.books.splice(index,1)\r\n-                },\r\n-                queryData: async function(){\r\n-                    this.books=await axios.get('/books')\r\n-                }\r\n-            },\r\n-            //常用特性：侦听器\r\n-            //验证图书名称是否已经存在\r\n-            watch:{\r\n-                name:function(val){\r\n-                    var nameFlag=this.books.some((item)=>{\r\n-                        return item.name===val\r\n-                    })\r\n-                    if(nameFlag){\r\n-                        //说明图书名称存在\r\n-                        this.submitFlag=true  //禁用提交按钮\r\n-                    }else{\r\n-                        this.submitFlag=false\r\n-                    }\r\n-                }\r\n-            },\r\n-            //常用特性：计算属性\r\n-            computed:{\r\n-                total:function(){\r\n-                    return this.books.length\r\n-                }\r\n-            },\r\n-            //生命周期\r\n-            //该生命周期钩子函数被触发时，模板已经可以使用\r\n-            //一般用于获取后台数据，然后把数据填充到模板\r\n-            mounted:function(){\r\n-                // var data=[{\r\n-                //     id: 1,\r\n-                //     name: '三国演义',\r\n-                //     date: 2525609975000\r\n-                // }, {\r\n-                //     id: 2,\r\n-                //     name: '水浒传',\r\n-                //     date: 2525609975000\r\n-                // }, {\r\n-                //     id: 3,\r\n-                //     name: '红楼梦',\r\n-                //     date: 2525609975000\r\n-                // }]\r\n-                this.queryData()\r\n-                \r\n-            }\r\n-        })\r\n-    </script>\r\n-</body>\r\n-\r\n-</html>\n-<!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-\r\n-<head>\r\n-    <meta charset=\"UTF-8\">\r\n-    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n-    <title>Document</title>\r\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n-</head>\r\n-\r\n-<body>\r\n-    <div id=\"app\">\r\n-        <div class=\"grid\">\r\n-            <div>\r\n-                <h2>图书管理</h2>\r\n-                <div class=\"book\">\r\n-                    <label for=\"id\">编号：</label>\r\n-                    <input type=\"text\" id=\"id\" v-model='id' :disabled=\"idFlag\" v-focus>\r\n-                    <label for=\"name\">名称：</label>\r\n-                    <input type=\"text\" id=\"name\" v-model='name' @key.enter='handle'>\r\n-                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n-                </div>\r\n-                <div class=\"total\">\r\n-                    <span>图书总数：</span>\r\n-                    <span>{{total}}</span>\r\n-                </div>\r\n-            </div>\r\n-            <table>\r\n-                <thead>\r\n-                    <tr>\r\n-                        <th>编号</th>\r\n-                        <th>名称</th>\r\n-                        <th>时间</th>\r\n-                        <th>操作</th>\r\n-                    </tr>\r\n-                </thead>\r\n-                <tbody>\r\n-                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n-                        <td>{{item.id}}</td>\r\n-                        <td>{{item.name}}</td>\r\n-                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n-                        <td>\r\n-                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n-                            <span>|</span>\r\n-                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n-                        </td>\r\n-                    </tr>\r\n-                </tbody>\r\n-            </table>\r\n-        </div>\r\n-    </div>\r\n-    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n-    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n-\r\n-    <script>\r\n-        axios.defaults.baseURL='http://localhost:3000'\r\n-        axios.interceptors.response.use((res)=>{\r\n-            return res.data\r\n-        },(error)=>{\r\n-            console.log(error);\r\n-        })\r\n-\r\n-        //常用特性：自定义指令\r\n-        Vue.directive('focus', {\r\n-            inserted: function (el) {\r\n-                el.focus()\r\n-            }\r\n-        })\r\n-        //常用特性：过滤器\r\n-        Vue.filter('format', function (value, arg) {\r\n-            function dateFormat(date, format) {\r\n-                if (typeof date === \"string\") {\r\n-                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n-                    if (mts && mts.length >= 3) {\r\n-                        date = parseInt(mts[2]);\r\n-                    }\r\n-                }\r\n-                date = new Date(date);\r\n-                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n-                    return \"\";\r\n-                }\r\n-                var map = {\r\n-                    \"M\": date.getMonth() + 1, //月份 \r\n-                    \"d\": date.getDate(), //日 \r\n-                    \"h\": date.getHours(), //小时 \r\n-                    \"m\": date.getMinutes(), //分 \r\n-                    \"s\": date.getSeconds(), //秒 \r\n-                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n-                    \"S\": date.getMilliseconds() //毫秒 \r\n-                };\r\n-                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n-                    var v = map[t];\r\n-                    if (v !== undefined) {\r\n-                        if (all.length > 1) {\r\n-                            v = '0' + v;\r\n-                            v = v.substr(v.length - 2);\r\n-                        }\r\n-                        return v;\r\n-                    } else if (t === 'y') {\r\n-                        return (date.getFullYear() + '').substr(4 - all.length);\r\n-                    }\r\n-                    return all;\r\n-                });\r\n-                return format;\r\n-            }\r\n-            return dateFormat(value, arg);\r\n-        })\r\n-        var vm = new Vue({\r\n-            el: '#app',\r\n-            data: {\r\n-                id: '',\r\n-                name: '',\r\n-                idFlag: false,\r\n-                submitFlag:false,\r\n-                books: []\r\n-            },\r\n-            methods: {\r\n-                handle: async function () {\r\n-                    if (this.idFlag) {\r\n-                        //true:禁用状态，则为修改\r\n-                        //在books中根据id查找对应的book\r\n-                        this.books.some((item) => {\r\n-                            if (item.id == this.id) {\r\n-                                //将修改后的名称赋值给对应的book\r\n-                                item.name = this.name\r\n-                                return true\r\n-                            }\r\n-                        })\r\n-                        //修改完成后需要将编号的状态取消禁用\r\n-                        this.idFlag = false\r\n-                    } else {\r\n-                        //否则为添加\r\n-                        var ret=await axios.post('books',{\r\n-                            name:this.name\r\n-                        })\r\n-                        console.log(ret);\r\n-                        if(ret.status==200){\r\n-                            //重新加载图书列表数据\r\n-                            this.queryData()\r\n-                        }\r\n-                    }\r\n-                    //清空表单\r\n-                    this.id = ''\r\n-                    this.name = ''\r\n-                },\r\n-                toEdit: function (id) {\r\n-                    //禁止修改id\r\n-                    this.idFlag = true\r\n-                    //根据id找book\r\n-                    var book = this.books.filter(function (item) {\r\n-                        return item.id == id\r\n-                    })\r\n-                    this.id = book[0].id\r\n-                    this.name = book[0].name\r\n-                },\r\n-                toDelete: function (id) {\r\n-                    //方法一：利用filter方法把某个book从books中过滤掉\r\n-                    this.books = this.books.filter((item) => {\r\n-                        return item.id != id\r\n-                    })\r\n-                    //方法二：根据id找到对应的books索引\r\n-                    // var index=this.books.findIndex((item)=>{\r\n-                    //     return item.id==id\r\n-                    // })\r\n-                    // this.books.splice(index,1)\r\n-                },\r\n-                queryData: async function(){\r\n-                    this.books=await axios.get('/books')\r\n-                }\r\n-            },\r\n-            //常用特性：侦听器\r\n-            //验证图书名称是否已经存在\r\n-            watch:{\r\n-                name:function(val){\r\n-                    var nameFlag=this.books.some((item)=>{\r\n-                        return item.name===val\r\n-                    })\r\n-                    if(nameFlag){\r\n-                        //说明图书名称存在\r\n-                        this.submitFlag=true  //禁用提交按钮\r\n-                    }else{\r\n-                        this.submitFlag=false\r\n-                    }\r\n-                }\r\n-            },\r\n-            //常用特性：计算属性\r\n-            computed:{\r\n-                total:function(){\r\n-                    return this.books.length\r\n-                }\r\n-            },\r\n-            //生命周期\r\n-            //该生命周期钩子函数被触发时，模板已经可以使用\r\n-            //一般用于获取后台数据，然后把数据填充到模板\r\n-            mounted:function(){\r\n-                // var data=[{\r\n-                //     id: 1,\r\n-                //     name: '三国演义',\r\n-                //     date: 2525609975000\r\n-                // }, {\r\n-                //     id: 2,\r\n-                //     name: '水浒传',\r\n-                //     date: 2525609975000\r\n-                // }, {\r\n-                //     id: 3,\r\n-                //     name: '红楼梦',\r\n-                //     date: 2525609975000\r\n-                // }]\r\n-                this.queryData()\r\n-                \r\n-            }\r\n-        })\r\n-    </script>\r\n-</body>\r\n-\r\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1629789886789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,8 +171,10 @@\n             //常用特性：侦听器\r\n             //验证图书名称是否已经存在\r\n             watch:{\r\n                 name:function(val){\r\n+                    var ret=await axios.get('books/book?name'+val)\r\n+\r\n                     var nameFlag=this.books.some((item)=>{\r\n                         return item.name===val\r\n                     })\r\n                     if(nameFlag){\r\n"
                },
                {
                    "date": 1629789910783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,218 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+\r\n+<head>\r\n+    <meta charset=\"UTF-8\">\r\n+    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+    <title>Document</title>\r\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n+</head>\r\n+\r\n+<body>\r\n+    <div id=\"app\">\r\n+        <div class=\"grid\">\r\n+            <div>\r\n+                <h2>图书管理</h2>\r\n+                <div class=\"book\">\r\n+                    <label for=\"id\">编号：</label>\r\n+                    <input type=\"text\" id=\"id\" v-model='id' disabled=\"false\" v-focus>\r\n+                    <label for=\"name\">名称：</label>\r\n+                    <input type=\"text\" id=\"name\" v-model='name' @keyup.enter='handle'>\r\n+                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n+                </div>\r\n+                <div class=\"total\">\r\n+                    <span>图书总数：</span>\r\n+                    <span>{{total}}</span>\r\n+                </div>\r\n+            </div>\r\n+            <table>\r\n+                <thead>\r\n+                    <tr>\r\n+                        <th>编号</th>\r\n+                        <th>名称</th>\r\n+                        <th>时间</th>\r\n+                        <th>操作</th>\r\n+                    </tr>\r\n+                </thead>\r\n+                <tbody>\r\n+                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n+                        <td>{{item.id}}</td>\r\n+                        <td>{{item.name}}</td>\r\n+                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n+                        <td>\r\n+                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n+                            <span>|</span>\r\n+                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n+                        </td>\r\n+                    </tr>\r\n+                </tbody>\r\n+            </table>\r\n+        </div>\r\n+    </div>\r\n+    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n+    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n+\r\n+    <script>\r\n+        axios.defaults.baseURL='http://localhost:3000'\r\n+        axios.interceptors.response.use((res)=>{\r\n+            return res.data\r\n+        },(error)=>{\r\n+            console.log(error);\r\n+        })\r\n+\r\n+        //常用特性：自定义指令\r\n+        Vue.directive('focus', {\r\n+            inserted: function (el) {\r\n+                el.focus()\r\n+            }\r\n+        })\r\n+        //常用特性：过滤器\r\n+        Vue.filter('format', function (value, arg) {\r\n+            function dateFormat(date, format) {\r\n+                if (typeof date === \"string\") {\r\n+                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n+                    if (mts && mts.length >= 3) {\r\n+                        date = parseInt(mts[2]);\r\n+                    }\r\n+                }\r\n+                date = new Date(date);\r\n+                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n+                    return \"\";\r\n+                }\r\n+                var map = {\r\n+                    \"M\": date.getMonth() + 1, //月份 \r\n+                    \"d\": date.getDate(), //日 \r\n+                    \"h\": date.getHours(), //小时 \r\n+                    \"m\": date.getMinutes(), //分 \r\n+                    \"s\": date.getSeconds(), //秒 \r\n+                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n+                    \"S\": date.getMilliseconds() //毫秒 \r\n+                };\r\n+                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n+                    var v = map[t];\r\n+                    if (v !== undefined) {\r\n+                        if (all.length > 1) {\r\n+                            v = '0' + v;\r\n+                            v = v.substr(v.length - 2);\r\n+                        }\r\n+                        return v;\r\n+                    } else if (t === 'y') {\r\n+                        return (date.getFullYear() + '').substr(4 - all.length);\r\n+                    }\r\n+                    return all;\r\n+                });\r\n+                return format;\r\n+            }\r\n+            return dateFormat(value, arg);\r\n+        })\r\n+        var vm = new Vue({\r\n+            el: '#app',\r\n+            data: {\r\n+                id: '',\r\n+                name: '',\r\n+                idFlag: false,\r\n+                submitFlag:false,\r\n+                books: []\r\n+            },\r\n+            methods: {\r\n+                handle: async function () {\r\n+                    if (this.idFlag) {\r\n+                        //true:禁用状态，则为修改\r\n+                        //在books中根据id查找对应的book\r\n+                        this.books.some((item) => {\r\n+                            if (item.id == this.id) {\r\n+                                //将修改后的名称赋值给对应的book\r\n+                                item.name = this.name\r\n+                                return true\r\n+                            }\r\n+                        })\r\n+                        //修改完成后需要将编号的状态取消禁用\r\n+                        this.idFlag = false\r\n+                    } else {\r\n+                        //否则为添加\r\n+                        var ret=await axios.post('books',{\r\n+                            name:this.name\r\n+                        })\r\n+                        if(ret.status==200){\r\n+                            //重新加载图书列表数据\r\n+                            this.queryData()\r\n+                        }\r\n+                    }\r\n+                    //清空表单\r\n+                    this.id = ''\r\n+                    this.name = ''\r\n+                },\r\n+                toEdit: function (id) {\r\n+                    //禁止修改id\r\n+                    this.idFlag = true\r\n+                    //根据id找book\r\n+                    var book = this.books.filter(function (item) {\r\n+                        return item.id == id\r\n+                    })\r\n+                    this.id = book[0].id\r\n+                    this.name = book[0].name\r\n+                },\r\n+                toDelete: function (id) {\r\n+                    //方法一：利用filter方法把某个book从books中过滤掉\r\n+                    this.books = this.books.filter((item) => {\r\n+                        return item.id != id\r\n+                    })\r\n+                    //方法二：根据id找到对应的books索引\r\n+                    // var index=this.books.findIndex((item)=>{\r\n+                    //     return item.id==id\r\n+                    // })\r\n+                    // this.books.splice(index,1)\r\n+                },\r\n+                queryData: async function(){\r\n+                    this.books=await axios.get('/books')\r\n+                }\r\n+            },\r\n+            //常用特性：侦听器\r\n+            //验证图书名称是否已经存在\r\n+            watch:{\r\n+                name:async function(val){\r\n+                    var ret=await axios.get('books/book?name'+val)\r\n+\r\n+                    // var nameFlag=this.books.some((item)=>{\r\n+                    //     return item.name===val\r\n+                    // })\r\n+                    if(nameFlag){\r\n+                        //说明图书名称存在\r\n+                        this.submitFlag=true  //禁用提交按钮\r\n+                    }else{\r\n+                        this.submitFlag=false\r\n+                    }\r\n+                }\r\n+            },\r\n+            //常用特性：计算属性\r\n+            computed:{\r\n+                total:function(){\r\n+                    return this.books.length\r\n+                }\r\n+            },\r\n+            //生命周期\r\n+            //该生命周期钩子函数被触发时，模板已经可以使用\r\n+            //一般用于获取后台数据，然后把数据填充到模板\r\n+            mounted:function(){\r\n+                // var data=[{\r\n+                //     id: 1,\r\n+                //     name: '三国演义',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 2,\r\n+                //     name: '水浒传',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 3,\r\n+                //     name: '红楼梦',\r\n+                //     date: 2525609975000\r\n+                // }]\r\n+                this.queryData()\r\n+                \r\n+            }\r\n+        })\r\n+    </script>\r\n+</body>\r\n+\r\n+</html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1629789981373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,233 +170,16 @@\n             },\r\n             //常用特性：侦听器\r\n             //验证图书名称是否已经存在\r\n             watch:{\r\n-                name:async function(val){\r\n-                    var ret=await axios.get('books/book?name'+val)\r\n-\r\n+                name:async function(val){                   \r\n                     // var nameFlag=this.books.some((item)=>{\r\n                     //     return item.name===val\r\n                     // })\r\n-                    if(nameFlag){\r\n-                        //说明图书名称存在\r\n-                        this.submitFlag=true  //禁用提交按钮\r\n-                    }else{\r\n-                        this.submitFlag=false\r\n-                    }\r\n-                }\r\n-            },\r\n-            //常用特性：计算属性\r\n-            computed:{\r\n-                total:function(){\r\n-                    return this.books.length\r\n-                }\r\n-            },\r\n-            //生命周期\r\n-            //该生命周期钩子函数被触发时，模板已经可以使用\r\n-            //一般用于获取后台数据，然后把数据填充到模板\r\n-            mounted:function(){\r\n-                // var data=[{\r\n-                //     id: 1,\r\n-                //     name: '三国演义',\r\n-                //     date: 2525609975000\r\n-                // }, {\r\n-                //     id: 2,\r\n-                //     name: '水浒传',\r\n-                //     date: 2525609975000\r\n-                // }, {\r\n-                //     id: 3,\r\n-                //     name: '红楼梦',\r\n-                //     date: 2525609975000\r\n-                // }]\r\n-                this.queryData()\r\n-                \r\n-            }\r\n-        })\r\n-    </script>\r\n-</body>\r\n+                    // if(nameFlag){\r\n \r\n-</html>\n-<!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-\r\n-<head>\r\n-    <meta charset=\"UTF-8\">\r\n-    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n-    <title>Document</title>\r\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n-</head>\r\n-\r\n-<body>\r\n-    <div id=\"app\">\r\n-        <div class=\"grid\">\r\n-            <div>\r\n-                <h2>图书管理</h2>\r\n-                <div class=\"book\">\r\n-                    <label for=\"id\">编号：</label>\r\n-                    <input type=\"text\" id=\"id\" v-model='id' disabled=\"false\" v-focus>\r\n-                    <label for=\"name\">名称：</label>\r\n-                    <input type=\"text\" id=\"name\" v-model='name' @keyup.enter='handle'>\r\n-                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n-                </div>\r\n-                <div class=\"total\">\r\n-                    <span>图书总数：</span>\r\n-                    <span>{{total}}</span>\r\n-                </div>\r\n-            </div>\r\n-            <table>\r\n-                <thead>\r\n-                    <tr>\r\n-                        <th>编号</th>\r\n-                        <th>名称</th>\r\n-                        <th>时间</th>\r\n-                        <th>操作</th>\r\n-                    </tr>\r\n-                </thead>\r\n-                <tbody>\r\n-                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n-                        <td>{{item.id}}</td>\r\n-                        <td>{{item.name}}</td>\r\n-                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n-                        <td>\r\n-                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n-                            <span>|</span>\r\n-                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n-                        </td>\r\n-                    </tr>\r\n-                </tbody>\r\n-            </table>\r\n-        </div>\r\n-    </div>\r\n-    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n-    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n-\r\n-    <script>\r\n-        axios.defaults.baseURL='http://localhost:3000'\r\n-        axios.interceptors.response.use((res)=>{\r\n-            return res.data\r\n-        },(error)=>{\r\n-            console.log(error);\r\n-        })\r\n-\r\n-        //常用特性：自定义指令\r\n-        Vue.directive('focus', {\r\n-            inserted: function (el) {\r\n-                el.focus()\r\n-            }\r\n-        })\r\n-        //常用特性：过滤器\r\n-        Vue.filter('format', function (value, arg) {\r\n-            function dateFormat(date, format) {\r\n-                if (typeof date === \"string\") {\r\n-                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n-                    if (mts && mts.length >= 3) {\r\n-                        date = parseInt(mts[2]);\r\n-                    }\r\n-                }\r\n-                date = new Date(date);\r\n-                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n-                    return \"\";\r\n-                }\r\n-                var map = {\r\n-                    \"M\": date.getMonth() + 1, //月份 \r\n-                    \"d\": date.getDate(), //日 \r\n-                    \"h\": date.getHours(), //小时 \r\n-                    \"m\": date.getMinutes(), //分 \r\n-                    \"s\": date.getSeconds(), //秒 \r\n-                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n-                    \"S\": date.getMilliseconds() //毫秒 \r\n-                };\r\n-                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n-                    var v = map[t];\r\n-                    if (v !== undefined) {\r\n-                        if (all.length > 1) {\r\n-                            v = '0' + v;\r\n-                            v = v.substr(v.length - 2);\r\n-                        }\r\n-                        return v;\r\n-                    } else if (t === 'y') {\r\n-                        return (date.getFullYear() + '').substr(4 - all.length);\r\n-                    }\r\n-                    return all;\r\n-                });\r\n-                return format;\r\n-            }\r\n-            return dateFormat(value, arg);\r\n-        })\r\n-        var vm = new Vue({\r\n-            el: '#app',\r\n-            data: {\r\n-                id: '',\r\n-                name: '',\r\n-                idFlag: false,\r\n-                submitFlag:false,\r\n-                books: []\r\n-            },\r\n-            methods: {\r\n-                handle: async function () {\r\n-                    if (this.idFlag) {\r\n-                        //true:禁用状态，则为修改\r\n-                        //在books中根据id查找对应的book\r\n-                        this.books.some((item) => {\r\n-                            if (item.id == this.id) {\r\n-                                //将修改后的名称赋值给对应的book\r\n-                                item.name = this.name\r\n-                                return true\r\n-                            }\r\n-                        })\r\n-                        //修改完成后需要将编号的状态取消禁用\r\n-                        this.idFlag = false\r\n-                    } else {\r\n-                        //否则为添加\r\n-                        var ret=await axios.post('books',{\r\n-                            name:this.name\r\n-                        })\r\n-                        if(ret.status==200){\r\n-                            //重新加载图书列表数据\r\n-                            this.queryData()\r\n-                        }\r\n-                    }\r\n-                    //清空表单\r\n-                    this.id = ''\r\n-                    this.name = ''\r\n-                },\r\n-                toEdit: function (id) {\r\n-                    //禁止修改id\r\n-                    this.idFlag = true\r\n-                    //根据id找book\r\n-                    var book = this.books.filter(function (item) {\r\n-                        return item.id == id\r\n-                    })\r\n-                    this.id = book[0].id\r\n-                    this.name = book[0].name\r\n-                },\r\n-                toDelete: function (id) {\r\n-                    //方法一：利用filter方法把某个book从books中过滤掉\r\n-                    this.books = this.books.filter((item) => {\r\n-                        return item.id != id\r\n-                    })\r\n-                    //方法二：根据id找到对应的books索引\r\n-                    // var index=this.books.findIndex((item)=>{\r\n-                    //     return item.id==id\r\n-                    // })\r\n-                    // this.books.splice(index,1)\r\n-                },\r\n-                queryData: async function(){\r\n-                    this.books=await axios.get('/books')\r\n-                }\r\n-            },\r\n-            //常用特性：侦听器\r\n-            //验证图书名称是否已经存在\r\n-            watch:{\r\n-                name:function(val){\r\n-                    var ret=await axios.get('books/book?name'+val)\r\n-\r\n-                    var nameFlag=this.books.some((item)=>{\r\n-                        return item.name===val\r\n-                    })\r\n-                    if(nameFlag){\r\n+                    var ret=await axios.get('books/book'+this.name)\r\n+                    if(ret.status==1){\r\n                         //说明图书名称存在\r\n                         this.submitFlag=true  //禁用提交按钮\r\n                     }else{\r\n                         this.submitFlag=false\r\n"
                },
                {
                    "date": 1629790065940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,219 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+\r\n+<head>\r\n+    <meta charset=\"UTF-8\">\r\n+    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+    <title>Document</title>\r\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n+</head>\r\n+\r\n+<body>\r\n+    <div id=\"app\">\r\n+        <div class=\"grid\">\r\n+            <div>\r\n+                <h2>图书管理</h2>\r\n+                <div class=\"book\">\r\n+                    <label for=\"id\">编号：</label>\r\n+                    <input type=\"text\" id=\"id\" v-model='id' disabled=\"false\" v-focus>\r\n+                    <label for=\"name\">名称：</label>\r\n+                    <input type=\"text\" id=\"name\" v-model='name' @keyup.enter='handle'>\r\n+                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n+                </div>\r\n+                <div class=\"total\">\r\n+                    <span>图书总数：</span>\r\n+                    <span>{{total}}</span>\r\n+                </div>\r\n+            </div>\r\n+            <table>\r\n+                <thead>\r\n+                    <tr>\r\n+                        <th>编号</th>\r\n+                        <th>名称</th>\r\n+                        <th>时间</th>\r\n+                        <th>操作</th>\r\n+                    </tr>\r\n+                </thead>\r\n+                <tbody>\r\n+                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n+                        <td>{{item.id}}</td>\r\n+                        <td>{{item.name}}</td>\r\n+                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n+                        <td>\r\n+                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n+                            <span>|</span>\r\n+                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n+                        </td>\r\n+                    </tr>\r\n+                </tbody>\r\n+            </table>\r\n+        </div>\r\n+    </div>\r\n+    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n+    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n+\r\n+    <script>\r\n+        axios.defaults.baseURL='http://localhost:3000'\r\n+        axios.interceptors.response.use((res)=>{\r\n+            return res.data\r\n+        },(error)=>{\r\n+            console.log(error);\r\n+        })\r\n+\r\n+        //常用特性：自定义指令\r\n+        Vue.directive('focus', {\r\n+            inserted: function (el) {\r\n+                el.focus()\r\n+            }\r\n+        })\r\n+        //常用特性：过滤器\r\n+        Vue.filter('format', function (value, arg) {\r\n+            function dateFormat(date, format) {\r\n+                if (typeof date === \"string\") {\r\n+                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n+                    if (mts && mts.length >= 3) {\r\n+                        date = parseInt(mts[2]);\r\n+                    }\r\n+                }\r\n+                date = new Date(date);\r\n+                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n+                    return \"\";\r\n+                }\r\n+                var map = {\r\n+                    \"M\": date.getMonth() + 1, //月份 \r\n+                    \"d\": date.getDate(), //日 \r\n+                    \"h\": date.getHours(), //小时 \r\n+                    \"m\": date.getMinutes(), //分 \r\n+                    \"s\": date.getSeconds(), //秒 \r\n+                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n+                    \"S\": date.getMilliseconds() //毫秒 \r\n+                };\r\n+                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n+                    var v = map[t];\r\n+                    if (v !== undefined) {\r\n+                        if (all.length > 1) {\r\n+                            v = '0' + v;\r\n+                            v = v.substr(v.length - 2);\r\n+                        }\r\n+                        return v;\r\n+                    } else if (t === 'y') {\r\n+                        return (date.getFullYear() + '').substr(4 - all.length);\r\n+                    }\r\n+                    return all;\r\n+                });\r\n+                return format;\r\n+            }\r\n+            return dateFormat(value, arg);\r\n+        })\r\n+        var vm = new Vue({\r\n+            el: '#app',\r\n+            data: {\r\n+                id: '',\r\n+                name: '',\r\n+                idFlag: false,\r\n+                submitFlag:false,\r\n+                books: []\r\n+            },\r\n+            methods: {\r\n+                handle: async function () {\r\n+                    if (this.idFlag) {\r\n+                        //true:禁用状态，则为修改\r\n+                        //在books中根据id查找对应的book\r\n+                        this.books.some((item) => {\r\n+                            if (item.id == this.id) {\r\n+                                //将修改后的名称赋值给对应的book\r\n+                                item.name = this.name\r\n+                                return true\r\n+                            }\r\n+                        })\r\n+                        //修改完成后需要将编号的状态取消禁用\r\n+                        this.idFlag = false\r\n+                    } else {\r\n+                        //否则为添加\r\n+                        var ret=await axios.post('books',{\r\n+                            name:this.name\r\n+                        })\r\n+                        if(ret.status==200){\r\n+                            //重新加载图书列表数据\r\n+                            this.queryData()\r\n+                        }\r\n+                    }\r\n+                    //清空表单\r\n+                    this.id = ''\r\n+                    this.name = ''\r\n+                },\r\n+                toEdit: function (id) {\r\n+                    //禁止修改id\r\n+                    this.idFlag = true\r\n+                    //根据id找book\r\n+                    var book = this.books.filter(function (item) {\r\n+                        return item.id == id\r\n+                    })\r\n+                    this.id = book[0].id\r\n+                    this.name = book[0].name\r\n+                },\r\n+                toDelete: function (id) {\r\n+                    //方法一：利用filter方法把某个book从books中过滤掉\r\n+                    this.books = this.books.filter((item) => {\r\n+                        return item.id != id\r\n+                    })\r\n+                    //方法二：根据id找到对应的books索引\r\n+                    // var index=this.books.findIndex((item)=>{\r\n+                    //     return item.id==id\r\n+                    // })\r\n+                    // this.books.splice(index,1)\r\n+                },\r\n+                queryData: async function(){\r\n+                    this.books=await axios.get('/books')\r\n+                }\r\n+            },\r\n+            //常用特性：侦听器\r\n+            //验证图书名称是否已经存在\r\n+            watch:{\r\n+                name:async function(val){                   \r\n+                    // var nameFlag=this.books.some((item)=>{\r\n+                    //     return item.name===val\r\n+                    // })\r\n+                    // if(nameFlag){\r\n+\r\n+                    var ret=await axios.get('/books/book'+this.name)\r\n+                    if(ret.status==1){\r\n+                        //说明图书名称存在\r\n+                        this.submitFlag=true  //禁用提交按钮\r\n+                    }else{\r\n+                        this.submitFlag=false\r\n+                    }\r\n+                }\r\n+            },\r\n+            //常用特性：计算属性\r\n+            computed:{\r\n+                total:function(){\r\n+                    return this.books.length\r\n+                }\r\n+            },\r\n+            //生命周期\r\n+            //该生命周期钩子函数被触发时，模板已经可以使用\r\n+            //一般用于获取后台数据，然后把数据填充到模板\r\n+            mounted:function(){\r\n+                // var data=[{\r\n+                //     id: 1,\r\n+                //     name: '三国演义',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 2,\r\n+                //     name: '水浒传',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 3,\r\n+                //     name: '红楼梦',\r\n+                //     date: 2525609975000\r\n+                // }]\r\n+                this.queryData()\r\n+                \r\n+            }\r\n+        })\r\n+    </script>\r\n+</body>\r\n+\r\n+</html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1629790566281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,9 +170,9 @@\n             },\r\n             //常用特性：侦听器\r\n             //验证图书名称是否已经存在\r\n             watch:{\r\n-                name:async function(val){                   \r\n+                name:async function(){                   \r\n                     // var nameFlag=this.books.some((item)=>{\r\n                     //     return item.name===val\r\n                     // })\r\n                     // if(nameFlag){\r\n@@ -215,224 +215,5 @@\n         })\r\n     </script>\r\n </body>\r\n \r\n-</html>\n-<!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-\r\n-<head>\r\n-    <meta charset=\"UTF-8\">\r\n-    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n-    <title>Document</title>\r\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n-</head>\r\n-\r\n-<body>\r\n-    <div id=\"app\">\r\n-        <div class=\"grid\">\r\n-            <div>\r\n-                <h2>图书管理</h2>\r\n-                <div class=\"book\">\r\n-                    <label for=\"id\">编号：</label>\r\n-                    <input type=\"text\" id=\"id\" v-model='id' disabled=\"false\" v-focus>\r\n-                    <label for=\"name\">名称：</label>\r\n-                    <input type=\"text\" id=\"name\" v-model='name' @keyup.enter='handle'>\r\n-                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n-                </div>\r\n-                <div class=\"total\">\r\n-                    <span>图书总数：</span>\r\n-                    <span>{{total}}</span>\r\n-                </div>\r\n-            </div>\r\n-            <table>\r\n-                <thead>\r\n-                    <tr>\r\n-                        <th>编号</th>\r\n-                        <th>名称</th>\r\n-                        <th>时间</th>\r\n-                        <th>操作</th>\r\n-                    </tr>\r\n-                </thead>\r\n-                <tbody>\r\n-                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n-                        <td>{{item.id}}</td>\r\n-                        <td>{{item.name}}</td>\r\n-                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n-                        <td>\r\n-                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n-                            <span>|</span>\r\n-                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n-                        </td>\r\n-                    </tr>\r\n-                </tbody>\r\n-            </table>\r\n-        </div>\r\n-    </div>\r\n-    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n-    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n-\r\n-    <script>\r\n-        axios.defaults.baseURL='http://localhost:3000'\r\n-        axios.interceptors.response.use((res)=>{\r\n-            return res.data\r\n-        },(error)=>{\r\n-            console.log(error);\r\n-        })\r\n-\r\n-        //常用特性：自定义指令\r\n-        Vue.directive('focus', {\r\n-            inserted: function (el) {\r\n-                el.focus()\r\n-            }\r\n-        })\r\n-        //常用特性：过滤器\r\n-        Vue.filter('format', function (value, arg) {\r\n-            function dateFormat(date, format) {\r\n-                if (typeof date === \"string\") {\r\n-                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n-                    if (mts && mts.length >= 3) {\r\n-                        date = parseInt(mts[2]);\r\n-                    }\r\n-                }\r\n-                date = new Date(date);\r\n-                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n-                    return \"\";\r\n-                }\r\n-                var map = {\r\n-                    \"M\": date.getMonth() + 1, //月份 \r\n-                    \"d\": date.getDate(), //日 \r\n-                    \"h\": date.getHours(), //小时 \r\n-                    \"m\": date.getMinutes(), //分 \r\n-                    \"s\": date.getSeconds(), //秒 \r\n-                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n-                    \"S\": date.getMilliseconds() //毫秒 \r\n-                };\r\n-                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n-                    var v = map[t];\r\n-                    if (v !== undefined) {\r\n-                        if (all.length > 1) {\r\n-                            v = '0' + v;\r\n-                            v = v.substr(v.length - 2);\r\n-                        }\r\n-                        return v;\r\n-                    } else if (t === 'y') {\r\n-                        return (date.getFullYear() + '').substr(4 - all.length);\r\n-                    }\r\n-                    return all;\r\n-                });\r\n-                return format;\r\n-            }\r\n-            return dateFormat(value, arg);\r\n-        })\r\n-        var vm = new Vue({\r\n-            el: '#app',\r\n-            data: {\r\n-                id: '',\r\n-                name: '',\r\n-                idFlag: false,\r\n-                submitFlag:false,\r\n-                books: []\r\n-            },\r\n-            methods: {\r\n-                handle: async function () {\r\n-                    if (this.idFlag) {\r\n-                        //true:禁用状态，则为修改\r\n-                        //在books中根据id查找对应的book\r\n-                        this.books.some((item) => {\r\n-                            if (item.id == this.id) {\r\n-                                //将修改后的名称赋值给对应的book\r\n-                                item.name = this.name\r\n-                                return true\r\n-                            }\r\n-                        })\r\n-                        //修改完成后需要将编号的状态取消禁用\r\n-                        this.idFlag = false\r\n-                    } else {\r\n-                        //否则为添加\r\n-                        var ret=await axios.post('books',{\r\n-                            name:this.name\r\n-                        })\r\n-                        if(ret.status==200){\r\n-                            //重新加载图书列表数据\r\n-                            this.queryData()\r\n-                        }\r\n-                    }\r\n-                    //清空表单\r\n-                    this.id = ''\r\n-                    this.name = ''\r\n-                },\r\n-                toEdit: function (id) {\r\n-                    //禁止修改id\r\n-                    this.idFlag = true\r\n-                    //根据id找book\r\n-                    var book = this.books.filter(function (item) {\r\n-                        return item.id == id\r\n-                    })\r\n-                    this.id = book[0].id\r\n-                    this.name = book[0].name\r\n-                },\r\n-                toDelete: function (id) {\r\n-                    //方法一：利用filter方法把某个book从books中过滤掉\r\n-                    this.books = this.books.filter((item) => {\r\n-                        return item.id != id\r\n-                    })\r\n-                    //方法二：根据id找到对应的books索引\r\n-                    // var index=this.books.findIndex((item)=>{\r\n-                    //     return item.id==id\r\n-                    // })\r\n-                    // this.books.splice(index,1)\r\n-                },\r\n-                queryData: async function(){\r\n-                    this.books=await axios.get('/books')\r\n-                }\r\n-            },\r\n-            //常用特性：侦听器\r\n-            //验证图书名称是否已经存在\r\n-            watch:{\r\n-                name:async function(val){                   \r\n-                    // var nameFlag=this.books.some((item)=>{\r\n-                    //     return item.name===val\r\n-                    // })\r\n-                    // if(nameFlag){\r\n-\r\n-                    var ret=await axios.get('books/book'+this.name)\r\n-                    if(ret.status==1){\r\n-                        //说明图书名称存在\r\n-                        this.submitFlag=true  //禁用提交按钮\r\n-                    }else{\r\n-                        this.submitFlag=false\r\n-                    }\r\n-                }\r\n-            },\r\n-            //常用特性：计算属性\r\n-            computed:{\r\n-                total:function(){\r\n-                    return this.books.length\r\n-                }\r\n-            },\r\n-            //生命周期\r\n-            //该生命周期钩子函数被触发时，模板已经可以使用\r\n-            //一般用于获取后台数据，然后把数据填充到模板\r\n-            mounted:function(){\r\n-                // var data=[{\r\n-                //     id: 1,\r\n-                //     name: '三国演义',\r\n-                //     date: 2525609975000\r\n-                // }, {\r\n-                //     id: 2,\r\n-                //     name: '水浒传',\r\n-                //     date: 2525609975000\r\n-                // }, {\r\n-                //     id: 3,\r\n-                //     name: '红楼梦',\r\n-                //     date: 2525609975000\r\n-                // }]\r\n-                this.queryData()\r\n-                \r\n-            }\r\n-        })\r\n-    </script>\r\n-</body>\r\n-\r\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1629790695801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,9 +170,9 @@\n             },\r\n             //常用特性：侦听器\r\n             //验证图书名称是否已经存在\r\n             watch:{\r\n-                name:async function(){                   \r\n+                name:async function(val){                   \r\n                     // var nameFlag=this.books.some((item)=>{\r\n                     //     return item.name===val\r\n                     // })\r\n                     // if(nameFlag){\r\n"
                },
                {
                    "date": 1629790940000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,15 +176,15 @@\n                     //     return item.name===val\r\n                     // })\r\n                     // if(nameFlag){\r\n \r\n-                    var ret=await axios.get('/books/book'+this.name)\r\n-                    if(ret.status==1){\r\n-                        //说明图书名称存在\r\n-                        this.submitFlag=true  //禁用提交按钮\r\n-                    }else{\r\n-                        this.submitFlag=false\r\n-                    }\r\n+                    var ret=await axios.get('/books/book?'+this.name)\r\n+                    // if(ret.status==1){\r\n+                    //     //说明图书名称存在\r\n+                    //     this.submitFlag=true  //禁用提交按钮\r\n+                    // }else{\r\n+                    //     this.submitFlag=false\r\n+                    // }\r\n                 }\r\n             },\r\n             //常用特性：计算属性\r\n             computed:{\r\n"
                },
                {
                    "date": 1629791005552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n                     //     return item.name===val\r\n                     // })\r\n                     // if(nameFlag){\r\n \r\n-                    var ret=await axios.get('/books/book?'+this.name)\r\n+                    var ret=await axios.get('/books/book'+this.name)\r\n                     // if(ret.status==1){\r\n                     //     //说明图书名称存在\r\n                     //     this.submitFlag=true  //禁用提交按钮\r\n                     // }else{\r\n"
                },
                {
                    "date": 1629791463942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n                     //     return item.name===val\r\n                     // })\r\n                     // if(nameFlag){\r\n \r\n-                    var ret=await axios.get('/books/book'+this.name)\r\n+                    var ret=await axios.get('/books/book/'+this.name)\r\n                     // if(ret.status==1){\r\n                     //     //说明图书名称存在\r\n                     //     this.submitFlag=true  //禁用提交按钮\r\n                     // }else{\r\n"
                },
                {
                    "date": 1629791707017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,8 +177,9 @@\n                     // })\r\n                     // if(nameFlag){\r\n \r\n                     var ret=await axios.get('/books/book/'+this.name)\r\n+                    console.log(ret);\r\n                     // if(ret.status==1){\r\n                     //     //说明图书名称存在\r\n                     //     this.submitFlag=true  //禁用提交按钮\r\n                     // }else{\r\n"
                },
                {
                    "date": 1629791728374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,15 +177,15 @@\n                     // })\r\n                     // if(nameFlag){\r\n \r\n                     var ret=await axios.get('/books/book/'+this.name)\r\n-                    console.log(ret);\r\n-                    // if(ret.status==1){\r\n-                    //     //说明图书名称存在\r\n-                    //     this.submitFlag=true  //禁用提交按钮\r\n-                    // }else{\r\n-                    //     this.submitFlag=false\r\n-                    // }\r\n+                    // console.log(ret);\r\n+                    if(ret.status==1){\r\n+                        //说明图书名称存在\r\n+                        this.submitFlag=true  //禁用提交按钮\r\n+                    }else{\r\n+                        this.submitFlag=false\r\n+                    }\r\n                 }\r\n             },\r\n             //常用特性：计算属性\r\n             computed:{\r\n"
                },
                {
                    "date": 1629791876977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,220 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+\r\n+<head>\r\n+    <meta charset=\"UTF-8\">\r\n+    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+    <title>Document</title>\r\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n+</head>\r\n+\r\n+<body>\r\n+    <div id=\"app\">\r\n+        <div class=\"grid\">\r\n+            <div>\r\n+                <h2>图书管理</h2>\r\n+                <div class=\"book\">\r\n+                    <label for=\"id\">编号：</label>\r\n+                    <input type=\"text\" id=\"id\" v-model='id' disabled=\"false\" v-focus>\r\n+                    <label for=\"name\">名称：</label>\r\n+                    <input type=\"text\" id=\"name\" v-model='name' >  <!-- @keyup.enter='handle' -->\r\n+                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n+                </div>\r\n+                <div class=\"total\">\r\n+                    <span>图书总数：</span>\r\n+                    <span>{{total}}</span>\r\n+                </div>\r\n+            </div>\r\n+            <table>\r\n+                <thead>\r\n+                    <tr>\r\n+                        <th>编号</th>\r\n+                        <th>名称</th>\r\n+                        <th>时间</th>\r\n+                        <th>操作</th>\r\n+                    </tr>\r\n+                </thead>\r\n+                <tbody>\r\n+                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n+                        <td>{{item.id}}</td>\r\n+                        <td>{{item.name}}</td>\r\n+                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n+                        <td>\r\n+                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n+                            <span>|</span>\r\n+                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n+                        </td>\r\n+                    </tr>\r\n+                </tbody>\r\n+            </table>\r\n+        </div>\r\n+    </div>\r\n+    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n+    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n+\r\n+    <script>\r\n+        axios.defaults.baseURL='http://localhost:3000'\r\n+        axios.interceptors.response.use((res)=>{\r\n+            return res.data\r\n+        },(error)=>{\r\n+            console.log(error);\r\n+        })\r\n+\r\n+        //常用特性：自定义指令\r\n+        Vue.directive('focus', {\r\n+            inserted: function (el) {\r\n+                el.focus()\r\n+            }\r\n+        })\r\n+        //常用特性：过滤器\r\n+        Vue.filter('format', function (value, arg) {\r\n+            function dateFormat(date, format) {\r\n+                if (typeof date === \"string\") {\r\n+                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n+                    if (mts && mts.length >= 3) {\r\n+                        date = parseInt(mts[2]);\r\n+                    }\r\n+                }\r\n+                date = new Date(date);\r\n+                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n+                    return \"\";\r\n+                }\r\n+                var map = {\r\n+                    \"M\": date.getMonth() + 1, //月份 \r\n+                    \"d\": date.getDate(), //日 \r\n+                    \"h\": date.getHours(), //小时 \r\n+                    \"m\": date.getMinutes(), //分 \r\n+                    \"s\": date.getSeconds(), //秒 \r\n+                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n+                    \"S\": date.getMilliseconds() //毫秒 \r\n+                };\r\n+                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n+                    var v = map[t];\r\n+                    if (v !== undefined) {\r\n+                        if (all.length > 1) {\r\n+                            v = '0' + v;\r\n+                            v = v.substr(v.length - 2);\r\n+                        }\r\n+                        return v;\r\n+                    } else if (t === 'y') {\r\n+                        return (date.getFullYear() + '').substr(4 - all.length);\r\n+                    }\r\n+                    return all;\r\n+                });\r\n+                return format;\r\n+            }\r\n+            return dateFormat(value, arg);\r\n+        })\r\n+        var vm = new Vue({\r\n+            el: '#app',\r\n+            data: {\r\n+                id: '',\r\n+                name: '',\r\n+                idFlag: false,\r\n+                submitFlag:false,\r\n+                books: []\r\n+            },\r\n+            methods: {\r\n+                handle: async function () {\r\n+                    if (this.idFlag) {\r\n+                        //true:禁用状态，则为修改\r\n+                        //在books中根据id查找对应的book\r\n+                        this.books.some((item) => {\r\n+                            if (item.id == this.id) {\r\n+                                //将修改后的名称赋值给对应的book\r\n+                                item.name = this.name\r\n+                                return true\r\n+                            }\r\n+                        })\r\n+                        //修改完成后需要将编号的状态取消禁用\r\n+                        this.idFlag = false\r\n+                    } else {\r\n+                        //否则为添加\r\n+                        var ret=await axios.post('books',{\r\n+                            name:this.name\r\n+                        })\r\n+                        if(ret.status==200){\r\n+                            //重新加载图书列表数据\r\n+                            this.queryData()\r\n+                        }\r\n+                    }\r\n+                    //清空表单\r\n+                    this.id = ''\r\n+                    this.name = ''\r\n+                },\r\n+                toEdit: function (id) {\r\n+                    //禁止修改id\r\n+                    this.idFlag = true\r\n+                    //根据id找book\r\n+                    var book = this.books.filter(function (item) {\r\n+                        return item.id == id\r\n+                    })\r\n+                    this.id = book[0].id\r\n+                    this.name = book[0].name\r\n+                },\r\n+                toDelete: function (id) {\r\n+                    //方法一：利用filter方法把某个book从books中过滤掉\r\n+                    this.books = this.books.filter((item) => {\r\n+                        return item.id != id\r\n+                    })\r\n+                    //方法二：根据id找到对应的books索引\r\n+                    // var index=this.books.findIndex((item)=>{\r\n+                    //     return item.id==id\r\n+                    // })\r\n+                    // this.books.splice(index,1)\r\n+                },\r\n+                queryData: async function(){\r\n+                    this.books=await axios.get('/books')\r\n+                }\r\n+            },\r\n+            //常用特性：侦听器\r\n+            //验证图书名称是否已经存在\r\n+            watch:{\r\n+                name:async function(val){                   \r\n+                    // var nameFlag=this.books.some((item)=>{\r\n+                    //     return item.name===val\r\n+                    // })\r\n+                    // if(nameFlag){\r\n+\r\n+                    var ret=await axios.get('/books/book/'+this.name)\r\n+                    // console.log(ret);\r\n+                    if(ret.status==1){\r\n+                        //说明图书名称存在\r\n+                        this.submitFlag=true  //禁用提交按钮\r\n+                    }else{\r\n+                        this.submitFlag=false\r\n+                    }\r\n+                }\r\n+            },\r\n+            //常用特性：计算属性\r\n+            computed:{\r\n+                total:function(){\r\n+                    return this.books.length\r\n+                }\r\n+            },\r\n+            //生命周期\r\n+            //该生命周期钩子函数被触发时，模板已经可以使用\r\n+            //一般用于获取后台数据，然后把数据填充到模板\r\n+            mounted:function(){\r\n+                // var data=[{\r\n+                //     id: 1,\r\n+                //     name: '三国演义',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 2,\r\n+                //     name: '水浒传',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 3,\r\n+                //     name: '红楼梦',\r\n+                //     date: 2525609975000\r\n+                // }]\r\n+                this.queryData()\r\n+                \r\n+            }\r\n+        })\r\n+    </script>\r\n+</body>\r\n+\r\n+</html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630038363845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,221 @@\n+<!DOCTYPE html>\r\n+<html lang=\"en\">\r\n+\r\n+<head>\r\n+    <meta charset=\"UTF-8\">\r\n+    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+    <title>Document</title>\r\n+    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n+</head>\r\n+\r\n+<body>\r\n+    <div id=\"app\">\r\n+        <div class=\"grid\">\r\n+            <div>\r\n+                <h2>图书管理</h2>\r\n+                <div class=\"book\">\r\n+                    <label for=\"id\">编号：</label>\r\n+                    <input type=\"text\" id=\"id\" v-model='id' disabled=\"false\" v-focus>\r\n+                    <label for=\"name\">名称：</label>\r\n+                    <input type=\"text\" id=\"name\" v-model='name' >  <!-- @keyup.enter='handle' -->\r\n+                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n+                </div>\r\n+                <div class=\"total\">\r\n+                    <span>图书总数：</span>\r\n+                    <span>{{total}}</span>\r\n+                </div>\r\n+            </div>\r\n+            <table>\r\n+                <thead>\r\n+                    <tr>\r\n+                        <th>编号</th>\r\n+                        <th>名称</th>\r\n+                        <th>时间</th>\r\n+                        <th>操作</th>\r\n+                    </tr>\r\n+                </thead>\r\n+                <tbody>\r\n+                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n+                        <td>{{item.id}}</td>\r\n+                        <td>{{item.name}}</td>\r\n+                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n+                        <td>\r\n+                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n+                            <span>|</span>\r\n+                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n+                        </td>\r\n+                    </tr>\r\n+                </tbody>\r\n+            </table>\r\n+        </div>\r\n+    </div>\r\n+    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n+    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n+\r\n+    <script>\r\n+        axios.defaults.baseURL='http://localhost:3000'\r\n+        axios.interceptors.response.use((res)=>{\r\n+            return res.data\r\n+        },(error)=>{\r\n+            console.log(error);\r\n+        })\r\n+\r\n+        //常用特性：自定义指令\r\n+        Vue.directive('focus', {\r\n+            inserted: function (el) {\r\n+                el.focus()\r\n+            }\r\n+        })\r\n+        //常用特性：过滤器\r\n+        Vue.filter('format', function (value, arg) {\r\n+            function dateFormat(date, format) {\r\n+                if (typeof date === \"string\") {\r\n+                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n+                    if (mts && mts.length >= 3) {\r\n+                        date = parseInt(mts[2]);\r\n+                    }\r\n+                }\r\n+                date = new Date(date);\r\n+                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n+                    return \"\";\r\n+                }\r\n+                var map = {\r\n+                    \"M\": date.getMonth() + 1, //月份 \r\n+                    \"d\": date.getDate(), //日 \r\n+                    \"h\": date.getHours(), //小时 \r\n+                    \"m\": date.getMinutes(), //分 \r\n+                    \"s\": date.getSeconds(), //秒 \r\n+                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n+                    \"S\": date.getMilliseconds() //毫秒 \r\n+                };\r\n+                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n+                    var v = map[t];\r\n+                    if (v !== undefined) {\r\n+                        if (all.length > 1) {\r\n+                            v = '0' + v;\r\n+                            v = v.substr(v.length - 2);\r\n+                        }\r\n+                        return v;\r\n+                    } else if (t === 'y') {\r\n+                        return (date.getFullYear() + '').substr(4 - all.length);\r\n+                    }\r\n+                    return all;\r\n+                });\r\n+                return format;\r\n+            }\r\n+            return dateFormat(value, arg);\r\n+        })\r\n+        var vm = new Vue({\r\n+            el: '#app',\r\n+            data: {\r\n+                id: '',\r\n+                name: '',\r\n+                idFlag: false,\r\n+                submitFlag:false,\r\n+                books: []\r\n+            },\r\n+            methods: {\r\n+                handle: async function () {\r\n+                    if (this.idFlag) {\r\n+                        //true:禁用状态，则为修改\r\n+                        //在books中根据id查找对应的book\r\n+                        this.books.some((item) => {\r\n+                            if (item.id == this.id) {\r\n+                                //将修改后的名称赋值给对应的book\r\n+                                item.name = this.name\r\n+                                return true\r\n+                            }\r\n+                        })\r\n+                        //修改完成后需要将编号的状态取消禁用\r\n+                        this.idFlag = false\r\n+                    } else {\r\n+                        //否则为添加\r\n+                        var ret=await axios.post('books',{\r\n+                            name:this.name\r\n+                        })\r\n+                        if(ret.status==200){\r\n+                            //重新加载图书列表数据\r\n+                            this.queryData()\r\n+                        }\r\n+                    }\r\n+                    //清空表单\r\n+                    this.id = ''\r\n+                    this.name = ''\r\n+                },\r\n+                toEdit: function (id) {\r\n+                    //禁止修改id\r\n+                    this.idFlag = true\r\n+                    //根据id找book\r\n+                    var book = this.books.filter(function (item) {\r\n+                        return item.id == id\r\n+                    })\r\n+                    this.id = book[0].id\r\n+                    this.name = book[0].name\r\n+                },\r\n+                toDelete: async function (id) {\r\n+                    //方法一：利用filter方法把某个book从books中过滤掉\r\n+                    this.books = this.books.filter((item) => {\r\n+                        return item.id != id\r\n+                    })\r\n+                    //方法二：根据id找到对应的books索引\r\n+                    // var index=this.books.findIndex((item)=>{\r\n+                    //     return item.id==id\r\n+                    // })\r\n+                    // this.books.splice(index,1)\r\n+                    await axios.get('/books/'+id)\r\n+                },\r\n+                queryData: async function(){\r\n+                    this.books=await axios.get('/books')\r\n+                }\r\n+            },\r\n+            //常用特性：侦听器\r\n+            //验证图书名称是否已经存在\r\n+            watch:{\r\n+                name:async function(val){                   \r\n+                    // var nameFlag=this.books.some((item)=>{\r\n+                    //     return item.name===val\r\n+                    // })\r\n+                    // if(nameFlag){\r\n+\r\n+                    var ret=await axios.get('/books/book/'+this.name)\r\n+                    // console.log(ret);\r\n+                    if(ret.status==1){\r\n+                        //说明图书名称存在\r\n+                        this.submitFlag=true  //禁用提交按钮\r\n+                    }else{\r\n+                        this.submitFlag=false\r\n+                    }\r\n+                }\r\n+            },\r\n+            //常用特性：计算属性\r\n+            computed:{\r\n+                total:function(){\r\n+                    return this.books.length\r\n+                }\r\n+            },\r\n+            //生命周期\r\n+            //该生命周期钩子函数被触发时，模板已经可以使用\r\n+            //一般用于获取后台数据，然后把数据填充到模板\r\n+            mounted:function(){\r\n+                // var data=[{\r\n+                //     id: 1,\r\n+                //     name: '三国演义',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 2,\r\n+                //     name: '水浒传',\r\n+                //     date: 2525609975000\r\n+                // }, {\r\n+                //     id: 3,\r\n+                //     name: '红楼梦',\r\n+                //     date: 2525609975000\r\n+                // }]\r\n+                this.queryData()\r\n+                \r\n+            }\r\n+        })\r\n+    </script>\r\n+</body>\r\n+\r\n+</html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630042676841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,15 +142,16 @@\n                     //清空表单\r\n                     this.id = ''\r\n                     this.name = ''\r\n                 },\r\n-                toEdit: function (id) {\r\n+                toEdit: async function (id) {\r\n                     //禁止修改id\r\n                     this.idFlag = true\r\n                     //根据id找book\r\n-                    var book = this.books.filter(function (item) {\r\n-                        return item.id == id\r\n-                    })\r\n+                    // var book = this.books.filter(function (item) {\r\n+                    //     return item.id == id\r\n+                    // })\r\n+                    var book=await axios.get('/books/:id')\r\n                     this.id = book[0].id\r\n                     this.name = book[0].name\r\n                 },\r\n                 toDelete: async function (id) {\r\n@@ -217,445 +218,5 @@\n         })\r\n     </script>\r\n </body>\r\n \r\n-</html>\n-<!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-\r\n-<head>\r\n-    <meta charset=\"UTF-8\">\r\n-    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n-    <title>Document</title>\r\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n-</head>\r\n-\r\n-<body>\r\n-    <div id=\"app\">\r\n-        <div class=\"grid\">\r\n-            <div>\r\n-                <h2>图书管理</h2>\r\n-                <div class=\"book\">\r\n-                    <label for=\"id\">编号：</label>\r\n-                    <input type=\"text\" id=\"id\" v-model='id' disabled=\"false\" v-focus>\r\n-                    <label for=\"name\">名称：</label>\r\n-                    <input type=\"text\" id=\"name\" v-model='name' >  <!-- @keyup.enter='handle' -->\r\n-                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n-                </div>\r\n-                <div class=\"total\">\r\n-                    <span>图书总数：</span>\r\n-                    <span>{{total}}</span>\r\n-                </div>\r\n-            </div>\r\n-            <table>\r\n-                <thead>\r\n-                    <tr>\r\n-                        <th>编号</th>\r\n-                        <th>名称</th>\r\n-                        <th>时间</th>\r\n-                        <th>操作</th>\r\n-                    </tr>\r\n-                </thead>\r\n-                <tbody>\r\n-                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n-                        <td>{{item.id}}</td>\r\n-                        <td>{{item.name}}</td>\r\n-                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n-                        <td>\r\n-                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n-                            <span>|</span>\r\n-                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n-                        </td>\r\n-                    </tr>\r\n-                </tbody>\r\n-            </table>\r\n-        </div>\r\n-    </div>\r\n-    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n-    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n-\r\n-    <script>\r\n-        axios.defaults.baseURL='http://localhost:3000'\r\n-        axios.interceptors.response.use((res)=>{\r\n-            return res.data\r\n-        },(error)=>{\r\n-            console.log(error);\r\n-        })\r\n-\r\n-        //常用特性：自定义指令\r\n-        Vue.directive('focus', {\r\n-            inserted: function (el) {\r\n-                el.focus()\r\n-            }\r\n-        })\r\n-        //常用特性：过滤器\r\n-        Vue.filter('format', function (value, arg) {\r\n-            function dateFormat(date, format) {\r\n-                if (typeof date === \"string\") {\r\n-                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n-                    if (mts && mts.length >= 3) {\r\n-                        date = parseInt(mts[2]);\r\n-                    }\r\n-                }\r\n-                date = new Date(date);\r\n-                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n-                    return \"\";\r\n-                }\r\n-                var map = {\r\n-                    \"M\": date.getMonth() + 1, //月份 \r\n-                    \"d\": date.getDate(), //日 \r\n-                    \"h\": date.getHours(), //小时 \r\n-                    \"m\": date.getMinutes(), //分 \r\n-                    \"s\": date.getSeconds(), //秒 \r\n-                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n-                    \"S\": date.getMilliseconds() //毫秒 \r\n-                };\r\n-                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n-                    var v = map[t];\r\n-                    if (v !== undefined) {\r\n-                        if (all.length > 1) {\r\n-                            v = '0' + v;\r\n-                            v = v.substr(v.length - 2);\r\n-                        }\r\n-                        return v;\r\n-                    } else if (t === 'y') {\r\n-                        return (date.getFullYear() + '').substr(4 - all.length);\r\n-                    }\r\n-                    return all;\r\n-                });\r\n-                return format;\r\n-            }\r\n-            return dateFormat(value, arg);\r\n-        })\r\n-        var vm = new Vue({\r\n-            el: '#app',\r\n-            data: {\r\n-                id: '',\r\n-                name: '',\r\n-                idFlag: false,\r\n-                submitFlag:false,\r\n-                books: []\r\n-            },\r\n-            methods: {\r\n-                handle: async function () {\r\n-                    if (this.idFlag) {\r\n-                        //true:禁用状态，则为修改\r\n-                        //在books中根据id查找对应的book\r\n-                        this.books.some((item) => {\r\n-                            if (item.id == this.id) {\r\n-                                //将修改后的名称赋值给对应的book\r\n-                                item.name = this.name\r\n-                                return true\r\n-                            }\r\n-                        })\r\n-                        //修改完成后需要将编号的状态取消禁用\r\n-                        this.idFlag = false\r\n-                    } else {\r\n-                        //否则为添加\r\n-                        var ret=await axios.post('books',{\r\n-                            name:this.name\r\n-                        })\r\n-                        if(ret.status==200){\r\n-                            //重新加载图书列表数据\r\n-                            this.queryData()\r\n-                        }\r\n-                    }\r\n-                    //清空表单\r\n-                    this.id = ''\r\n-                    this.name = ''\r\n-                },\r\n-                toEdit: function (id) {\r\n-                    //禁止修改id\r\n-                    this.idFlag = true\r\n-                    //根据id找book\r\n-                    var book = this.books.filter(function (item) {\r\n-                        return item.id == id\r\n-                    })\r\n-                    this.id = book[0].id\r\n-                    this.name = book[0].name\r\n-                },\r\n-                toDelete: function (id) {\r\n-                    //方法一：利用filter方法把某个book从books中过滤掉\r\n-                    this.books = this.books.filter((item) => {\r\n-                        return item.id != id\r\n-                    })\r\n-                    //方法二：根据id找到对应的books索引\r\n-                    // var index=this.books.findIndex((item)=>{\r\n-                    //     return item.id==id\r\n-                    // })\r\n-                    // this.books.splice(index,1)\r\n-                },\r\n-                queryData: async function(){\r\n-                    this.books=await axios.get('/books')\r\n-                }\r\n-            },\r\n-            //常用特性：侦听器\r\n-            //验证图书名称是否已经存在\r\n-            watch:{\r\n-                name:async function(val){                   \r\n-                    // var nameFlag=this.books.some((item)=>{\r\n-                    //     return item.name===val\r\n-                    // })\r\n-                    // if(nameFlag){\r\n-\r\n-                    var ret=await axios.get('/books/book/'+this.name)\r\n-                    // console.log(ret);\r\n-                    if(ret.status==1){\r\n-                        //说明图书名称存在\r\n-                        this.submitFlag=true  //禁用提交按钮\r\n-                    }else{\r\n-                        this.submitFlag=false\r\n-                    }\r\n-                }\r\n-            },\r\n-            //常用特性：计算属性\r\n-            computed:{\r\n-                total:function(){\r\n-                    return this.books.length\r\n-                }\r\n-            },\r\n-            //生命周期\r\n-            //该生命周期钩子函数被触发时，模板已经可以使用\r\n-            //一般用于获取后台数据，然后把数据填充到模板\r\n-            mounted:function(){\r\n-                // var data=[{\r\n-                //     id: 1,\r\n-                //     name: '三国演义',\r\n-                //     date: 2525609975000\r\n-                // }, {\r\n-                //     id: 2,\r\n-                //     name: '水浒传',\r\n-                //     date: 2525609975000\r\n-                // }, {\r\n-                //     id: 3,\r\n-                //     name: '红楼梦',\r\n-                //     date: 2525609975000\r\n-                // }]\r\n-                this.queryData()\r\n-                \r\n-            }\r\n-        })\r\n-    </script>\r\n-</body>\r\n-\r\n-</html>\n-<!DOCTYPE html>\r\n-<html lang=\"en\">\r\n-\r\n-<head>\r\n-    <meta charset=\"UTF-8\">\r\n-    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n-    <title>Document</title>\r\n-    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n-</head>\r\n-\r\n-<body>\r\n-    <div id=\"app\">\r\n-        <div class=\"grid\">\r\n-            <div>\r\n-                <h2>图书管理</h2>\r\n-                <div class=\"book\">\r\n-                    <label for=\"id\">编号：</label>\r\n-                    <input type=\"text\" id=\"id\" v-model='id' disabled=\"false\" v-focus>\r\n-                    <label for=\"name\">名称：</label>\r\n-                    <input type=\"text\" id=\"name\" v-model='name' @keyup.enter='handle'>\r\n-                    <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n-                </div>\r\n-                <div class=\"total\">\r\n-                    <span>图书总数：</span>\r\n-                    <span>{{total}}</span>\r\n-                </div>\r\n-            </div>\r\n-            <table>\r\n-                <thead>\r\n-                    <tr>\r\n-                        <th>编号</th>\r\n-                        <th>名称</th>\r\n-                        <th>时间</th>\r\n-                        <th>操作</th>\r\n-                    </tr>\r\n-                </thead>\r\n-                <tbody>\r\n-                    <tr :key=\"item.id\" v-for='(item,index) in books'>\r\n-                        <td>{{item.id}}</td>\r\n-                        <td>{{item.name}}</td>\r\n-                        <td>{{item.date|format('yyyy-MM-dd')}}</td>\r\n-                        <td>\r\n-                            <a href=\"#\" @click.prevent='toEdit(item.id)'>修改</a>\r\n-                            <span>|</span>\r\n-                            <a href=\"#\" @click.prevent='toDelete(item.id)'>删除</a>\r\n-                        </td>\r\n-                    </tr>\r\n-                </tbody>\r\n-            </table>\r\n-        </div>\r\n-    </div>\r\n-    <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js\"></script>\r\n-    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\r\n-\r\n-    <script>\r\n-        axios.defaults.baseURL='http://localhost:3000'\r\n-        axios.interceptors.response.use((res)=>{\r\n-            return res.data\r\n-        },(error)=>{\r\n-            console.log(error);\r\n-        })\r\n-\r\n-        //常用特性：自定义指令\r\n-        Vue.directive('focus', {\r\n-            inserted: function (el) {\r\n-                el.focus()\r\n-            }\r\n-        })\r\n-        //常用特性：过滤器\r\n-        Vue.filter('format', function (value, arg) {\r\n-            function dateFormat(date, format) {\r\n-                if (typeof date === \"string\") {\r\n-                    var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n-                    if (mts && mts.length >= 3) {\r\n-                        date = parseInt(mts[2]);\r\n-                    }\r\n-                }\r\n-                date = new Date(date);\r\n-                if (!date || date.toUTCString() == \"Invalid Date\") {\r\n-                    return \"\";\r\n-                }\r\n-                var map = {\r\n-                    \"M\": date.getMonth() + 1, //月份 \r\n-                    \"d\": date.getDate(), //日 \r\n-                    \"h\": date.getHours(), //小时 \r\n-                    \"m\": date.getMinutes(), //分 \r\n-                    \"s\": date.getSeconds(), //秒 \r\n-                    \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n-                    \"S\": date.getMilliseconds() //毫秒 \r\n-                };\r\n-                format = format.replace(/([yMdhmsqS])+/g, function (all, t) {\r\n-                    var v = map[t];\r\n-                    if (v !== undefined) {\r\n-                        if (all.length > 1) {\r\n-                            v = '0' + v;\r\n-                            v = v.substr(v.length - 2);\r\n-                        }\r\n-                        return v;\r\n-                    } else if (t === 'y') {\r\n-                        return (date.getFullYear() + '').substr(4 - all.length);\r\n-                    }\r\n-                    return all;\r\n-                });\r\n-                return format;\r\n-            }\r\n-            return dateFormat(value, arg);\r\n-        })\r\n-        var vm = new Vue({\r\n-            el: '#app',\r\n-            data: {\r\n-                id: '',\r\n-                name: '',\r\n-                idFlag: false,\r\n-                submitFlag:false,\r\n-                books: []\r\n-            },\r\n-            methods: {\r\n-                handle: async function () {\r\n-                    if (this.idFlag) {\r\n-                        //true:禁用状态，则为修改\r\n-                        //在books中根据id查找对应的book\r\n-                        this.books.some((item) => {\r\n-                            if (item.id == this.id) {\r\n-                                //将修改后的名称赋值给对应的book\r\n-                                item.name = this.name\r\n-                                return true\r\n-                            }\r\n-                        })\r\n-                        //修改完成后需要将编号的状态取消禁用\r\n-                        this.idFlag = false\r\n-                    } else {\r\n-                        //否则为添加\r\n-                        var ret=await axios.post('books',{\r\n-                            name:this.name\r\n-                        })\r\n-                        if(ret.status==200){\r\n-                            //重新加载图书列表数据\r\n-                            this.queryData()\r\n-                        }\r\n-                    }\r\n-                    //清空表单\r\n-                    this.id = ''\r\n-                    this.name = ''\r\n-                },\r\n-                toEdit: function (id) {\r\n-                    //禁止修改id\r\n-                    this.idFlag = true\r\n-                    //根据id找book\r\n-                    var book = this.books.filter(function (item) {\r\n-                        return item.id == id\r\n-                    })\r\n-                    this.id = book[0].id\r\n-                    this.name = book[0].name\r\n-                },\r\n-                toDelete: function (id) {\r\n-                    //方法一：利用filter方法把某个book从books中过滤掉\r\n-                    this.books = this.books.filter((item) => {\r\n-                        return item.id != id\r\n-                    })\r\n-                    //方法二：根据id找到对应的books索引\r\n-                    // var index=this.books.findIndex((item)=>{\r\n-                    //     return item.id==id\r\n-                    // })\r\n-                    // this.books.splice(index,1)\r\n-                },\r\n-                queryData: async function(){\r\n-                    this.books=await axios.get('/books')\r\n-                }\r\n-            },\r\n-            //常用特性：侦听器\r\n-            //验证图书名称是否已经存在\r\n-            watch:{\r\n-                name:async function(val){                   \r\n-                    // var nameFlag=this.books.some((item)=>{\r\n-                    //     return item.name===val\r\n-                    // })\r\n-                    // if(nameFlag){\r\n-\r\n-                    var ret=await axios.get('/books/book/'+this.name)\r\n-                    // console.log(ret);\r\n-                    if(ret.status==1){\r\n-                        //说明图书名称存在\r\n-                        this.submitFlag=true  //禁用提交按钮\r\n-                    }else{\r\n-                        this.submitFlag=false\r\n-                    }\r\n-                }\r\n-            },\r\n-            //常用特性：计算属性\r\n-            computed:{\r\n-                total:function(){\r\n-                    return this.books.length\r\n-                }\r\n-            },\r\n-            //生命周期\r\n-            //该生命周期钩子函数被触发时，模板已经可以使用\r\n-            //一般用于获取后台数据，然后把数据填充到模板\r\n-            mounted:function(){\r\n-                // var data=[{\r\n-                //     id: 1,\r\n-                //     name: '三国演义',\r\n-                //     date: 2525609975000\r\n-                // }, {\r\n-                //     id: 2,\r\n-                //     name: '水浒传',\r\n-                //     date: 2525609975000\r\n-                // }, {\r\n-                //     id: 3,\r\n-                //     name: '红楼梦',\r\n-                //     date: 2525609975000\r\n-                // }]\r\n-                this.queryData()\r\n-                \r\n-            }\r\n-        })\r\n-    </script>\r\n-</body>\r\n-\r\n </html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630042691404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,9 +149,9 @@\n                     //根据id找book\r\n                     // var book = this.books.filter(function (item) {\r\n                     //     return item.id == id\r\n                     // })\r\n-                    var book=await axios.get('/books/:id')\r\n+                    var book=await axios.get('/books/'+id)\r\n                     this.id = book[0].id\r\n                     this.name = book[0].name\r\n                 },\r\n                 toDelete: async function (id) {\r\n"
                },
                {
                    "date": 1630042747407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,8 +150,9 @@\n                     // var book = this.books.filter(function (item) {\r\n                     //     return item.id == id\r\n                     // })\r\n                     var book=await axios.get('/books/'+id)\r\n+                    console.log(book);\r\n                     this.id = book[0].id\r\n                     this.name = book[0].name\r\n                 },\r\n                 toDelete: async function (id) {\r\n"
                },
                {
                    "date": 1630042893424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,9 +150,8 @@\n                     // var book = this.books.filter(function (item) {\r\n                     //     return item.id == id\r\n                     // })\r\n                     var book=await axios.get('/books/'+id)\r\n-                    console.log(book);\r\n                     this.id = book[0].id\r\n                     this.name = book[0].name\r\n                 },\r\n                 toDelete: async function (id) {\r\n"
                },
                {
                    "date": 1630042999737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,9 @@\n                     // var index=this.books.findIndex((item)=>{\r\n                     //     return item.id==id\r\n                     // })\r\n                     // this.books.splice(index,1)\r\n-                    await axios.get('/books/'+id)\r\n+                    var ret=await axios.delete('/books/'+id)\r\n                 },\r\n                 queryData: async function(){\r\n                     this.books=await axios.get('/books')\r\n                 }\r\n"
                },
                {
                    "date": 1630043221979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,8 +164,9 @@\n                     //     return item.id==id\r\n                     // })\r\n                     // this.books.splice(index,1)\r\n                     var ret=await axios.delete('/books/'+id)\r\n+                    console.log();\r\n                 },\r\n                 queryData: async function(){\r\n                     this.books=await axios.get('/books')\r\n                 }\r\n"
                },
                {
                    "date": 1630043248416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,9 +164,9 @@\n                     //     return item.id==id\r\n                     // })\r\n                     // this.books.splice(index,1)\r\n                     var ret=await axios.delete('/books/'+id)\r\n-                    console.log();\r\n+                    console.log(ret);\r\n                 },\r\n                 queryData: async function(){\r\n                     this.books=await axios.get('/books')\r\n                 }\r\n"
                },
                {
                    "date": 1630044129193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,8 +165,11 @@\n                     // })\r\n                     // this.books.splice(index,1)\r\n                     var ret=await axios.delete('/books/'+id)\r\n                     console.log(ret);\r\n+                    if(ret.status==200){\r\n+                        this.queryData()\r\n+                    }\r\n                 },\r\n                 queryData: async function(){\r\n                     this.books=await axios.get('/books')\r\n                 }\r\n"
                },
                {
                    "date": 1630044152840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,9 +164,8 @@\n                     //     return item.id==id\r\n                     // })\r\n                     // this.books.splice(index,1)\r\n                     var ret=await axios.delete('/books/'+id)\r\n-                    console.log(ret);\r\n                     if(ret.status==200){\r\n                         this.queryData()\r\n                     }\r\n                 },\r\n"
                }
            ],
            "date": 1629784145055,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Document</title>\r\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"css/index.css\">\r\n</head>\r\n<body>\r\n  <div id=\"app\">\r\n    <div class=\"grid\">\r\n      <div>\r\n        <h1>图书管理</h1>\r\n        <div class=\"book\">\r\n          <div>\r\n            <label for=\"id\">\r\n              编号：\r\n            </label>\r\n            <input type=\"text\" id=\"id\" v-model='id' disabled=\"false\" v-focus>\r\n            <label for=\"name\">\r\n              名称：\r\n            </label>\r\n            <input type=\"text\" id=\"name\" v-model='name'>\r\n            <button @click='handle' :disabled=\"submitFlag\">提交</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"total\">\r\n        <span>图书总数：</span>\r\n        <span>{{total}}</span>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>编号</th>\r\n            <th>名称</th>\r\n            <th>时间</th>\r\n            <th>操作</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr :key='item.id' v-for='item in books'>\r\n            <td>{{item.id}}</td>\r\n            <td>{{item.name}}</td>\r\n            <td>{{item.date | format('yyyy-MM-dd hh:mm:ss')}}</td>\r\n            <td>\r\n              <a href=\"\" @click.prevent='toEdit(item.id)'>修改</a>\r\n              <span>|</span>\r\n              <a href=\"\" @click.prevent='deleteBook(item.id)'>删除</a>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <script type=\"text/javascript\" src=\"js/vue.js\"></script>\r\n  <script type=\"text/javascript\" src=\"js/axios.js\"></script>\r\n  <script type=\"text/javascript\">\r\n    /*\r\n      图书管理-添加图书\r\n    */\r\n    axios.defaults.baseURL = 'http://localhost:3000/';\r\n    axios.interceptors.response.use(function(res){\r\n      return res.data;\r\n    }, function(error){\r\n      console.log(error)\r\n    });\r\n    Vue.directive('focus', {\r\n      inserted: function (el) {\r\n        el.focus();\r\n      }\r\n    });\r\n    Vue.filter('format', function(value, arg) {\r\n      function dateFormat(date, format) {\r\n        if (typeof date === \"string\") {\r\n          var mts = date.match(/(\\/Date\\((\\d+)\\)\\/)/);\r\n          if (mts && mts.length >= 3) {\r\n            date = parseInt(mts[2]);\r\n          }\r\n        }\r\n        date = new Date(date);\r\n        if (!date || date.toUTCString() == \"Invalid Date\") {\r\n          return \"\";\r\n        }\r\n        var map = {\r\n          \"M\": date.getMonth() + 1, //月份 \r\n          \"d\": date.getDate(), //日 \r\n          \"h\": date.getHours(), //小时 \r\n          \"m\": date.getMinutes(), //分 \r\n          \"s\": date.getSeconds(), //秒 \r\n          \"q\": Math.floor((date.getMonth() + 3) / 3), //季度 \r\n          \"S\": date.getMilliseconds() //毫秒 \r\n        };\r\n        format = format.replace(/([yMdhmsqS])+/g, function(all, t) {\r\n          var v = map[t];\r\n          if (v !== undefined) {\r\n            if (all.length > 1) {\r\n              v = '0' + v;\r\n              v = v.substr(v.length - 2);\r\n            }\r\n            return v;\r\n          } else if (t === 'y') {\r\n            return (date.getFullYear() + '').substr(4 - all.length);\r\n          }\r\n          return all;\r\n        });\r\n        return format;\r\n      }\r\n      return dateFormat(value, arg);\r\n    })\r\n    var vm = new Vue({\r\n      el: '#app',\r\n      data: {\r\n        flag: false,\r\n        submitFlag: false,\r\n        id: '',\r\n        name: '',\r\n        books: []\r\n      },\r\n      methods: {\r\n        handle: async function(){\r\n          if(this.flag) {\r\n            // 编辑图书\r\n            var ret = await axios.put('books/' + this.id, {\r\n              name: this.name\r\n            });\r\n            if(ret.status == 200){\r\n              // 重新加载列表数据\r\n              this.queryData();\r\n            }\r\n            this.flag = false;\r\n          }else{\r\n            // 添加图书\r\n            var ret = await axios.post('books', {\r\n              name: this.name\r\n            })\r\n            if(ret.status == 200) {\r\n              // 重新加载列表数据\r\n              this.queryData();\r\n            }\r\n          }\r\n          // 清空表单\r\n          this.id = '';\r\n          this.name = '';\r\n        },\r\n        toEdit: async function(id){\r\n          // flag状态位用于区分编辑和添加操作\r\n          this.flag = true;\r\n          // 根据id查询出对应的图书信息\r\n          var ret = await axios.get('books/' + id);\r\n          this.id = ret.id;\r\n          this.name = ret.name;\r\n        },\r\n        deleteBook: async function(id){\r\n          // 删除图书\r\n          var ret = await axios.delete('books/' + id);\r\n          if(ret.status == 200) {\r\n            // 重新加载列表数据\r\n            this.queryData();\r\n          }\r\n        },\r\n        queryData: async function(){\r\n          // 调用后台接口获取图书列表数据\r\n          // var ret = await axios.get('books');\r\n          // this.books = ret.data;\r\n\r\n          this.books = await axios.get('books');\r\n        }\r\n      },\r\n      computed: {\r\n        total: function(){\r\n          // 计算图书的总数\r\n          return this.books.length;\r\n        }\r\n      },\r\n      watch: {\r\n        name: async function(val) {\r\n          // 验证图书名称是否已经存在\r\n          // var flag = this.books.some(function(item){\r\n          //   return item.name == val;\r\n          // });\r\n          var ret = await axios.get('/books/book/' + this.name);\r\n          if(ret.status == 1) {\r\n            // 图书名称存在\r\n            this.submitFlag = true;\r\n          }else{\r\n            // 图书名称不存在\r\n            this.submitFlag = false;\r\n          }\r\n        }\r\n      },\r\n      mounted: function(){\r\n        // var that = this;\r\n        // axios.get('books').then(function(data){\r\n        //   console.log(data.data)\r\n        //   that.books = data.data;\r\n        // })\r\n\r\n        // axios.get('books').then((data)=>{\r\n        //   console.log(data.data)\r\n        //   this.books = data.data;\r\n        // })\r\n\r\n        this.queryData();\r\n      }\r\n    });\r\n  </script>\r\n</body>\r\n</html>\r\n"
        }
    ]
}